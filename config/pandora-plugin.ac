dnl Generated file, run make to rebuild

AC_ARG_WITH([all-static],[
AS_HELP_STRING([--with-all-static],[Link all plugins staticly into the server @<:@default=no@:>@])
],[
    with_all_static="$withval"
    ],[
    with_all_static=no
])
  
dnl Config for 

AC_ARG_WITH([ascii-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-ascii-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-ascii-plugin],[Disable building ])
  ],[
    with_ascii_plugin="$withval"
    AS_IF([test "x$with_ascii_plugin" = "xyes"],[
      requested_ascii_plugin="yes"
    ],[
      requested_ascii_plugin="no"
    ])
  ],[
    with_ascii_plugin="yes"
    requested_ascii_plugin="no"
  ])
AC_ARG_WITH([static-ascii-plugin],[
AS_HELP_STRING([--with-static-ascii-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-ascii-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_ascii_plugin=${withval}
  ],[
    with_static_ascii_plugin=no
])
AS_IF([test "x${with_static_ascii_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_ascii_plugin=no
  ],[
  shared_ascii_plugin=yes
])
AC_ARG_ENABLE([ascii-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-ascii-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-ascii-plugin],[Disable loading  by default.])
  ],
  [enable_ascii_plugin="$enableval"],
  [enable_ascii_plugin=yes])


AM_CONDITIONAL([BUILD_ASCII_PLUGIN_STATIC],
               [test "x${with_ascii_plugin}" = "xyes" -a ! "x${shared_ascii_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_ASCII_PLUGIN_SHARED],
               [test "x${with_ascii_plugin}" = "xyes" -a "x${shared_ascii_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_ASCII_PLUGIN],
               [test "x${with_ascii_plugin}" = "xyes"])
    
AS_IF([test "x$with_ascii_plugin" = "xyes"],[

      AS_IF([test "x${with_static_ascii_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_ascii_plugin" = "xyes"],[
          pandora_builtin_load_list="ascii,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_ascii_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="ascii,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_ascii_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libascii_plugin.la"
     ],[
        AS_IF([test "x$enable_ascii_plugin" = "xyes"],[
          pandora_default_plugin_list="ascii,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([auth-all-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-auth-all-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-auth-all-plugin],[Disable building ])
  ],[
    with_auth_all_plugin="$withval"
    AS_IF([test "x$with_auth_all_plugin" = "xyes"],[
      requested_auth_all_plugin="yes"
    ],[
      requested_auth_all_plugin="no"
    ])
  ],[
    with_auth_all_plugin="yes"
    requested_auth_all_plugin="no"
  ])
AC_ARG_WITH([static-auth-all-plugin],[
AS_HELP_STRING([--with-static-auth-all-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-auth-all-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_auth_all_plugin=${withval}
  ],[
    with_static_auth_all_plugin=yes
])
AS_IF([test "x${with_static_auth_all_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_auth_all_plugin=no
  ],[
  shared_auth_all_plugin=yes
])
AC_ARG_ENABLE([auth-all-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-auth-all-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-auth-all-plugin],[Disable loading  by default.])
  ],
  [enable_auth_all_plugin="$enableval"],
  [enable_auth_all_plugin=yes])


AM_CONDITIONAL([BUILD_AUTH_ALL_PLUGIN_STATIC],
               [test "x${with_auth_all_plugin}" = "xyes" -a ! "x${shared_auth_all_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_ALL_PLUGIN_SHARED],
               [test "x${with_auth_all_plugin}" = "xyes" -a "x${shared_auth_all_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_ALL_PLUGIN],
               [test "x${with_auth_all_plugin}" = "xyes"])
    
AS_IF([test "x$with_auth_all_plugin" = "xyes"],[

      AS_IF([test "x${with_static_auth_all_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_auth_all_plugin" = "xyes"],[
          pandora_builtin_load_list="auth_all,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_auth_all_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="auth_all,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_auth_all_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libauth_all_plugin.la"
     ],[
        AS_IF([test "x$enable_auth_all_plugin" = "xyes"],[
          pandora_default_plugin_list="auth_all,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([auth-file-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-auth-file-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-auth-file-plugin],[Disable building ])
  ],[
    with_auth_file_plugin="$withval"
    AS_IF([test "x$with_auth_file_plugin" = "xyes"],[
      requested_auth_file_plugin="yes"
    ],[
      requested_auth_file_plugin="no"
    ])
  ],[
    with_auth_file_plugin="yes"
    requested_auth_file_plugin="no"
  ])
AC_ARG_WITH([static-auth-file-plugin],[
AS_HELP_STRING([--with-static-auth-file-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-auth-file-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_auth_file_plugin=${withval}
  ],[
    with_static_auth_file_plugin=no
])
AS_IF([test "x${with_static_auth_file_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_auth_file_plugin=no
  ],[
  shared_auth_file_plugin=yes
])
AC_ARG_ENABLE([auth-file-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-auth-file-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-auth-file-plugin],[Disable loading  by default.])
  ],
  [enable_auth_file_plugin="$enableval"],
  [enable_auth_file_plugin=no])


AM_CONDITIONAL([BUILD_AUTH_FILE_PLUGIN_STATIC],
               [test "x${with_auth_file_plugin}" = "xyes" -a ! "x${shared_auth_file_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_FILE_PLUGIN_SHARED],
               [test "x${with_auth_file_plugin}" = "xyes" -a "x${shared_auth_file_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_FILE_PLUGIN],
               [test "x${with_auth_file_plugin}" = "xyes"])
    
AS_IF([test "x$with_auth_file_plugin" = "xyes"],[

      pandora_plugin_test_list="auth_file,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_auth_file_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_auth_file_plugin" = "xyes"],[
          pandora_builtin_load_list="auth_file,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_auth_file_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="auth_file,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_auth_file_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libauth_file_plugin.la"
     ],[
        AS_IF([test "x$enable_auth_file_plugin" = "xyes"],[
          pandora_default_plugin_list="auth_file,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([auth-http-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-auth-http-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-auth-http-plugin],[Disable building ])
  ],[
    with_auth_http_plugin="$withval"
    AS_IF([test "x$with_auth_http_plugin" = "xyes"],[
      requested_auth_http_plugin="yes"
    ],[
      requested_auth_http_plugin="no"
    ])
  ],[
    with_auth_http_plugin="yes"
    requested_auth_http_plugin="no"
  ])
AC_ARG_WITH([static-auth-http-plugin],[
AS_HELP_STRING([--with-static-auth-http-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-auth-http-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_auth_http_plugin=${withval}
  ],[
    with_static_auth_http_plugin=no
])
AS_IF([test "x${with_static_auth_http_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_auth_http_plugin=no
  ],[
  shared_auth_http_plugin=yes
])
AC_ARG_ENABLE([auth-http-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-auth-http-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-auth-http-plugin],[Disable loading  by default.])
  ],
  [enable_auth_http_plugin="$enableval"],
  [enable_auth_http_plugin=no])

m4_sinclude([plugin/auth_http/plugin.ac])

AS_IF([test "x${with_auth_http_plugin}" = "xyes" -a "${ac_cv_libcurl}" = "yes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_auth_http_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin auth_http was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_auth_http_plugin=no
      ])


AM_CONDITIONAL([BUILD_AUTH_HTTP_PLUGIN_STATIC],
               [test "x${with_auth_http_plugin}" = "xyes" -a "${ac_cv_libcurl}" = "yes" -a ! "x${shared_auth_http_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_HTTP_PLUGIN_SHARED],
               [test "x${with_auth_http_plugin}" = "xyes" -a "${ac_cv_libcurl}" = "yes" -a "x${shared_auth_http_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_HTTP_PLUGIN],
               [test "x${with_auth_http_plugin}" = "xyes" -a "${ac_cv_libcurl}" = "yes"])
    
AS_IF([test "x$with_auth_http_plugin" = "xyes"],[

      AS_IF([test "x${with_static_auth_http_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_auth_http_plugin" = "xyes"],[
          pandora_builtin_load_list="auth_http,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_auth_http_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="auth_http,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_auth_http_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libauth_http_plugin.la"
     ],[
        AS_IF([test "x$enable_auth_http_plugin" = "xyes"],[
          pandora_default_plugin_list="auth_http,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([auth-ldap-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-auth-ldap-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-auth-ldap-plugin],[Disable building ])
  ],[
    with_auth_ldap_plugin="$withval"
    AS_IF([test "x$with_auth_ldap_plugin" = "xyes"],[
      requested_auth_ldap_plugin="yes"
    ],[
      requested_auth_ldap_plugin="no"
    ])
  ],[
    with_auth_ldap_plugin="yes"
    requested_auth_ldap_plugin="no"
  ])
AC_ARG_WITH([static-auth-ldap-plugin],[
AS_HELP_STRING([--with-static-auth-ldap-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-auth-ldap-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_auth_ldap_plugin=${withval}
  ],[
    with_static_auth_ldap_plugin=no
])
AS_IF([test "x${with_static_auth_ldap_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_auth_ldap_plugin=no
  ],[
  shared_auth_ldap_plugin=yes
])
AC_ARG_ENABLE([auth-ldap-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-auth-ldap-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-auth-ldap-plugin],[Disable loading  by default.])
  ],
  [enable_auth_ldap_plugin="$enableval"],
  [enable_auth_ldap_plugin=no])

m4_sinclude([plugin/auth_ldap/plugin.ac])

AS_IF([test "x${with_auth_ldap_plugin}" = "xyes" -a "x${ac_cv_libldap}" = "xyes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_auth_ldap_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin auth_ldap was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_auth_ldap_plugin=no
      ])


AM_CONDITIONAL([BUILD_AUTH_LDAP_PLUGIN_STATIC],
               [test "x${with_auth_ldap_plugin}" = "xyes" -a "x${ac_cv_libldap}" = "xyes" -a ! "x${shared_auth_ldap_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_LDAP_PLUGIN_SHARED],
               [test "x${with_auth_ldap_plugin}" = "xyes" -a "x${ac_cv_libldap}" = "xyes" -a "x${shared_auth_ldap_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_LDAP_PLUGIN],
               [test "x${with_auth_ldap_plugin}" = "xyes" -a "x${ac_cv_libldap}" = "xyes"])
    
AS_IF([test "x$with_auth_ldap_plugin" = "xyes"],[

      AS_IF([test "x${with_static_auth_ldap_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_auth_ldap_plugin" = "xyes"],[
          pandora_builtin_load_list="auth_ldap,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_auth_ldap_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="auth_ldap,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_auth_ldap_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libauth_ldap_plugin.la"
     ],[
        AS_IF([test "x$enable_auth_ldap_plugin" = "xyes"],[
          pandora_default_plugin_list="auth_ldap,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([auth-pam-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-auth-pam-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-auth-pam-plugin],[Disable building ])
  ],[
    with_auth_pam_plugin="$withval"
    AS_IF([test "x$with_auth_pam_plugin" = "xyes"],[
      requested_auth_pam_plugin="yes"
    ],[
      requested_auth_pam_plugin="no"
    ])
  ],[
    with_auth_pam_plugin="yes"
    requested_auth_pam_plugin="no"
  ])
AC_ARG_WITH([static-auth-pam-plugin],[
AS_HELP_STRING([--with-static-auth-pam-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-auth-pam-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_auth_pam_plugin=${withval}
  ],[
    with_static_auth_pam_plugin=no
])
AS_IF([test "x${with_static_auth_pam_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_auth_pam_plugin=no
  ],[
  shared_auth_pam_plugin=yes
])
AC_ARG_ENABLE([auth-pam-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-auth-pam-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-auth-pam-plugin],[Disable loading  by default.])
  ],
  [enable_auth_pam_plugin="$enableval"],
  [enable_auth_pam_plugin=no])

m4_sinclude([plugin/auth_pam/plugin.ac])

AS_IF([test "x${with_auth_pam_plugin}" = "xyes" -a "$ac_cv_libpam" = "yes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_auth_pam_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin auth_pam was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_auth_pam_plugin=no
      ])


AM_CONDITIONAL([BUILD_AUTH_PAM_PLUGIN_STATIC],
               [test "x${with_auth_pam_plugin}" = "xyes" -a "$ac_cv_libpam" = "yes" -a ! "x${shared_auth_pam_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_PAM_PLUGIN_SHARED],
               [test "x${with_auth_pam_plugin}" = "xyes" -a "$ac_cv_libpam" = "yes" -a "x${shared_auth_pam_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_PAM_PLUGIN],
               [test "x${with_auth_pam_plugin}" = "xyes" -a "$ac_cv_libpam" = "yes"])
    
AS_IF([test "x$with_auth_pam_plugin" = "xyes"],[

      AS_IF([test "x${with_static_auth_pam_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_auth_pam_plugin" = "xyes"],[
          pandora_builtin_load_list="auth_pam,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_auth_pam_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="auth_pam,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_auth_pam_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libauth_pam_plugin.la"
     ],[
        AS_IF([test "x$enable_auth_pam_plugin" = "xyes"],[
          pandora_default_plugin_list="auth_pam,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([auth-schema-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-auth-schema-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-auth-schema-plugin],[Disable building ])
  ],[
    with_auth_schema_plugin="$withval"
    AS_IF([test "x$with_auth_schema_plugin" = "xyes"],[
      requested_auth_schema_plugin="yes"
    ],[
      requested_auth_schema_plugin="no"
    ])
  ],[
    with_auth_schema_plugin="yes"
    requested_auth_schema_plugin="no"
  ])
AC_ARG_WITH([static-auth-schema-plugin],[
AS_HELP_STRING([--with-static-auth-schema-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-auth-schema-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_auth_schema_plugin=${withval}
  ],[
    with_static_auth_schema_plugin=no
])
AS_IF([test "x${with_static_auth_schema_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_auth_schema_plugin=no
  ],[
  shared_auth_schema_plugin=yes
])
AC_ARG_ENABLE([auth-schema-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-auth-schema-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-auth-schema-plugin],[Disable loading  by default.])
  ],
  [enable_auth_schema_plugin="$enableval"],
  [enable_auth_schema_plugin=no])


AM_CONDITIONAL([BUILD_AUTH_SCHEMA_PLUGIN_STATIC],
               [test "x${with_auth_schema_plugin}" = "xyes" -a ! "x${shared_auth_schema_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_SCHEMA_PLUGIN_SHARED],
               [test "x${with_auth_schema_plugin}" = "xyes" -a "x${shared_auth_schema_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_SCHEMA_PLUGIN],
               [test "x${with_auth_schema_plugin}" = "xyes"])
    
AS_IF([test "x$with_auth_schema_plugin" = "xyes"],[

      pandora_plugin_test_list="auth_schema,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_auth_schema_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_auth_schema_plugin" = "xyes"],[
          pandora_builtin_load_list="auth_schema,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_auth_schema_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="auth_schema,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_auth_schema_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libauth_schema_plugin.la"
     ],[
        AS_IF([test "x$enable_auth_schema_plugin" = "xyes"],[
          pandora_default_plugin_list="auth_schema,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([auth-test-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-auth-test-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-auth-test-plugin],[Disable building ])
  ],[
    with_auth_test_plugin="$withval"
    AS_IF([test "x$with_auth_test_plugin" = "xyes"],[
      requested_auth_test_plugin="yes"
    ],[
      requested_auth_test_plugin="no"
    ])
  ],[
    with_auth_test_plugin="yes"
    requested_auth_test_plugin="no"
  ])
AC_ARG_WITH([static-auth-test-plugin],[
AS_HELP_STRING([--with-static-auth-test-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-auth-test-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_auth_test_plugin=${withval}
  ],[
    with_static_auth_test_plugin=no
])
AS_IF([test "x${with_static_auth_test_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_auth_test_plugin=no
  ],[
  shared_auth_test_plugin=yes
])
AC_ARG_ENABLE([auth-test-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-auth-test-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-auth-test-plugin],[Disable loading  by default.])
  ],
  [enable_auth_test_plugin="$enableval"],
  [enable_auth_test_plugin=no])


AM_CONDITIONAL([BUILD_AUTH_TEST_PLUGIN_STATIC],
               [test "x${with_auth_test_plugin}" = "xyes" -a ! "x${shared_auth_test_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_TEST_PLUGIN_SHARED],
               [test "x${with_auth_test_plugin}" = "xyes" -a "x${shared_auth_test_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_AUTH_TEST_PLUGIN],
               [test "x${with_auth_test_plugin}" = "xyes"])
    
AS_IF([test "x$with_auth_test_plugin" = "xyes"],[

      pandora_plugin_test_list="auth_test,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_auth_test_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_auth_test_plugin" = "xyes"],[
          pandora_builtin_load_list="auth_test,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_auth_test_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="auth_test,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_auth_test_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libauth_test_plugin.la"
     ],[
        AS_IF([test "x$enable_auth_test_plugin" = "xyes"],[
          pandora_default_plugin_list="auth_test,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([benchmark-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-benchmark-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-benchmark-plugin],[Disable building ])
  ],[
    with_benchmark_plugin="$withval"
    AS_IF([test "x$with_benchmark_plugin" = "xyes"],[
      requested_benchmark_plugin="yes"
    ],[
      requested_benchmark_plugin="no"
    ])
  ],[
    with_benchmark_plugin="yes"
    requested_benchmark_plugin="no"
  ])
AC_ARG_WITH([static-benchmark-plugin],[
AS_HELP_STRING([--with-static-benchmark-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-benchmark-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_benchmark_plugin=${withval}
  ],[
    with_static_benchmark_plugin=no
])
AS_IF([test "x${with_static_benchmark_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_benchmark_plugin=no
  ],[
  shared_benchmark_plugin=yes
])
AC_ARG_ENABLE([benchmark-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-benchmark-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-benchmark-plugin],[Disable loading  by default.])
  ],
  [enable_benchmark_plugin="$enableval"],
  [enable_benchmark_plugin=yes])


AM_CONDITIONAL([BUILD_BENCHMARK_PLUGIN_STATIC],
               [test "x${with_benchmark_plugin}" = "xyes" -a ! "x${shared_benchmark_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_BENCHMARK_PLUGIN_SHARED],
               [test "x${with_benchmark_plugin}" = "xyes" -a "x${shared_benchmark_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_BENCHMARK_PLUGIN],
               [test "x${with_benchmark_plugin}" = "xyes"])
    
AS_IF([test "x$with_benchmark_plugin" = "xyes"],[

      AS_IF([test "x${with_static_benchmark_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_benchmark_plugin" = "xyes"],[
          pandora_builtin_load_list="benchmark,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_benchmark_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="benchmark,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_benchmark_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libbenchmark_plugin.la"
     ],[
        AS_IF([test "x$enable_benchmark_plugin" = "xyes"],[
          pandora_default_plugin_list="benchmark,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([catalog-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-catalog-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-catalog-plugin],[Disable building ])
  ],[
    with_catalog_plugin="$withval"
    AS_IF([test "x$with_catalog_plugin" = "xyes"],[
      requested_catalog_plugin="yes"
    ],[
      requested_catalog_plugin="no"
    ])
  ],[
    with_catalog_plugin="yes"
    requested_catalog_plugin="no"
  ])
AC_ARG_WITH([static-catalog-plugin],[
AS_HELP_STRING([--with-static-catalog-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-catalog-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_catalog_plugin=${withval}
  ],[
    with_static_catalog_plugin=yes
])
AS_IF([test "x${with_static_catalog_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_catalog_plugin=no
  ],[
  shared_catalog_plugin=yes
])
AC_ARG_ENABLE([catalog-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-catalog-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-catalog-plugin],[Disable loading  by default.])
  ],
  [enable_catalog_plugin="$enableval"],
  [enable_catalog_plugin=yes])


AM_CONDITIONAL([BUILD_CATALOG_PLUGIN_STATIC],
               [test "x${with_catalog_plugin}" = "xyes" -a ! "x${shared_catalog_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_CATALOG_PLUGIN_SHARED],
               [test "x${with_catalog_plugin}" = "xyes" -a "x${shared_catalog_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_CATALOG_PLUGIN],
               [test "x${with_catalog_plugin}" = "xyes"])
    
AS_IF([test "x$with_catalog_plugin" = "xyes"],[

      pandora_plugin_test_list="catalog,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_catalog_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_catalog_plugin" = "xyes"],[
          pandora_builtin_load_list="catalog,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_catalog_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="catalog,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_catalog_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libcatalog_plugin.la"
     ],[
        AS_IF([test "x$enable_catalog_plugin" = "xyes"],[
          pandora_default_plugin_list="catalog,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([charlength-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-charlength-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-charlength-plugin],[Disable building ])
  ],[
    with_charlength_plugin="$withval"
    AS_IF([test "x$with_charlength_plugin" = "xyes"],[
      requested_charlength_plugin="yes"
    ],[
      requested_charlength_plugin="no"
    ])
  ],[
    with_charlength_plugin="yes"
    requested_charlength_plugin="no"
  ])
AC_ARG_WITH([static-charlength-plugin],[
AS_HELP_STRING([--with-static-charlength-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-charlength-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_charlength_plugin=${withval}
  ],[
    with_static_charlength_plugin=no
])
AS_IF([test "x${with_static_charlength_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_charlength_plugin=no
  ],[
  shared_charlength_plugin=yes
])
AC_ARG_ENABLE([charlength-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-charlength-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-charlength-plugin],[Disable loading  by default.])
  ],
  [enable_charlength_plugin="$enableval"],
  [enable_charlength_plugin=yes])


AM_CONDITIONAL([BUILD_CHARLENGTH_PLUGIN_STATIC],
               [test "x${with_charlength_plugin}" = "xyes" -a ! "x${shared_charlength_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_CHARLENGTH_PLUGIN_SHARED],
               [test "x${with_charlength_plugin}" = "xyes" -a "x${shared_charlength_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_CHARLENGTH_PLUGIN],
               [test "x${with_charlength_plugin}" = "xyes"])
    
AS_IF([test "x$with_charlength_plugin" = "xyes"],[

      AS_IF([test "x${with_static_charlength_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_charlength_plugin" = "xyes"],[
          pandora_builtin_load_list="charlength,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_charlength_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="charlength,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_charlength_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libcharlength_plugin.la"
     ],[
        AS_IF([test "x$enable_charlength_plugin" = "xyes"],[
          pandora_default_plugin_list="charlength,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([coercibility-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-coercibility-function-plugin],[Build . @<:@default=no@:>@])
AS_HELP_STRING([--without-coercibility-function-plugin],[Disable building ])
  ],[
    with_coercibility_function_plugin="$withval"
    AS_IF([test "x$with_coercibility_function_plugin" = "xyes"],[
      requested_coercibility_function_plugin="yes"
    ],[
      requested_coercibility_function_plugin="no"
    ])
  ],[
    with_coercibility_function_plugin="no"
    requested_coercibility_function_plugin="no"
  ])
AC_ARG_WITH([static-coercibility-function-plugin],[
AS_HELP_STRING([--with-static-coercibility-function-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-coercibility-function-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_coercibility_function_plugin=${withval}
  ],[
    with_static_coercibility_function_plugin=no
])
AS_IF([test "x${with_static_coercibility_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_coercibility_function_plugin=no
  ],[
  shared_coercibility_function_plugin=yes
])
AC_ARG_ENABLE([coercibility-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-coercibility-function-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-coercibility-function-plugin],[Disable loading  by default.])
  ],
  [enable_coercibility_function_plugin="$enableval"],
  [enable_coercibility_function_plugin=no])


AM_CONDITIONAL([BUILD_COERCIBILITY_FUNCTION_PLUGIN_STATIC],
               [test "x${with_coercibility_function_plugin}" = "xyes" -a ! "x${shared_coercibility_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_COERCIBILITY_FUNCTION_PLUGIN_SHARED],
               [test "x${with_coercibility_function_plugin}" = "xyes" -a "x${shared_coercibility_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_COERCIBILITY_FUNCTION_PLUGIN],
               [test "x${with_coercibility_function_plugin}" = "xyes"])
    
AS_IF([test "x$with_coercibility_function_plugin" = "xyes"],[

      pandora_plugin_test_list="coercibility_function,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_coercibility_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_coercibility_function_plugin" = "xyes"],[
          pandora_builtin_load_list="coercibility_function,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_coercibility_function_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="coercibility_function,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_coercibility_function_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libcoercibility_function_plugin.la"
     ],[
        AS_IF([test "x$enable_coercibility_function_plugin" = "xyes"],[
          pandora_default_plugin_list="coercibility_function,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([collation-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-collation-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-collation-dictionary-plugin],[Disable building ])
  ],[
    with_collation_dictionary_plugin="$withval"
    AS_IF([test "x$with_collation_dictionary_plugin" = "xyes"],[
      requested_collation_dictionary_plugin="yes"
    ],[
      requested_collation_dictionary_plugin="no"
    ])
  ],[
    with_collation_dictionary_plugin="yes"
    requested_collation_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-collation-dictionary-plugin],[
AS_HELP_STRING([--with-static-collation-dictionary-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-collation-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_collation_dictionary_plugin=${withval}
  ],[
    with_static_collation_dictionary_plugin=yes
])
AS_IF([test "x${with_static_collation_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_collation_dictionary_plugin=no
  ],[
  shared_collation_dictionary_plugin=yes
])
AC_ARG_ENABLE([collation-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-collation-dictionary-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-collation-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_collation_dictionary_plugin="$enableval"],
  [enable_collation_dictionary_plugin=yes])


AM_CONDITIONAL([BUILD_COLLATION_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_collation_dictionary_plugin}" = "xyes" -a ! "x${shared_collation_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_COLLATION_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_collation_dictionary_plugin}" = "xyes" -a "x${shared_collation_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_COLLATION_DICTIONARY_PLUGIN],
               [test "x${with_collation_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_collation_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="collation_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_collation_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_collation_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="collation_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_collation_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="collation_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_collation_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libcollation_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_collation_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="collation_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([compression-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-compression-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-compression-plugin],[Disable building ])
  ],[
    with_compression_plugin="$withval"
    AS_IF([test "x$with_compression_plugin" = "xyes"],[
      requested_compression_plugin="yes"
    ],[
      requested_compression_plugin="no"
    ])
  ],[
    with_compression_plugin="yes"
    requested_compression_plugin="no"
  ])
AC_ARG_WITH([static-compression-plugin],[
AS_HELP_STRING([--with-static-compression-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-compression-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_compression_plugin=${withval}
  ],[
    with_static_compression_plugin=no
])
AS_IF([test "x${with_static_compression_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_compression_plugin=no
  ],[
  shared_compression_plugin=yes
])
AC_ARG_ENABLE([compression-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-compression-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-compression-plugin],[Disable loading  by default.])
  ],
  [enable_compression_plugin="$enableval"],
  [enable_compression_plugin=yes])


AM_CONDITIONAL([BUILD_COMPRESSION_PLUGIN_STATIC],
               [test "x${with_compression_plugin}" = "xyes" -a ! "x${shared_compression_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_COMPRESSION_PLUGIN_SHARED],
               [test "x${with_compression_plugin}" = "xyes" -a "x${shared_compression_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_COMPRESSION_PLUGIN],
               [test "x${with_compression_plugin}" = "xyes"])
    
AS_IF([test "x$with_compression_plugin" = "xyes"],[

      AS_IF([test "x${with_static_compression_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_compression_plugin" = "xyes"],[
          pandora_builtin_load_list="compression,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_compression_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="compression,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_compression_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libcompression_plugin.la"
     ],[
        AS_IF([test "x$enable_compression_plugin" = "xyes"],[
          pandora_default_plugin_list="compression,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([connection-id-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-connection-id-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-connection-id-plugin],[Disable building ])
  ],[
    with_connection_id_plugin="$withval"
    AS_IF([test "x$with_connection_id_plugin" = "xyes"],[
      requested_connection_id_plugin="yes"
    ],[
      requested_connection_id_plugin="no"
    ])
  ],[
    with_connection_id_plugin="yes"
    requested_connection_id_plugin="no"
  ])
AC_ARG_WITH([static-connection-id-plugin],[
AS_HELP_STRING([--with-static-connection-id-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-connection-id-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_connection_id_plugin=${withval}
  ],[
    with_static_connection_id_plugin=no
])
AS_IF([test "x${with_static_connection_id_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_connection_id_plugin=no
  ],[
  shared_connection_id_plugin=yes
])
AC_ARG_ENABLE([connection-id-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-connection-id-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-connection-id-plugin],[Disable loading  by default.])
  ],
  [enable_connection_id_plugin="$enableval"],
  [enable_connection_id_plugin=yes])


AM_CONDITIONAL([BUILD_CONNECTION_ID_PLUGIN_STATIC],
               [test "x${with_connection_id_plugin}" = "xyes" -a ! "x${shared_connection_id_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_CONNECTION_ID_PLUGIN_SHARED],
               [test "x${with_connection_id_plugin}" = "xyes" -a "x${shared_connection_id_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_CONNECTION_ID_PLUGIN],
               [test "x${with_connection_id_plugin}" = "xyes"])
    
AS_IF([test "x$with_connection_id_plugin" = "xyes"],[

      AS_IF([test "x${with_static_connection_id_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_connection_id_plugin" = "xyes"],[
          pandora_builtin_load_list="connection_id,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_connection_id_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="connection_id,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_connection_id_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libconnection_id_plugin.la"
     ],[
        AS_IF([test "x$enable_connection_id_plugin" = "xyes"],[
          pandora_default_plugin_list="connection_id,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([console-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-console-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-console-plugin],[Disable building ])
  ],[
    with_console_plugin="$withval"
    AS_IF([test "x$with_console_plugin" = "xyes"],[
      requested_console_plugin="yes"
    ],[
      requested_console_plugin="no"
    ])
  ],[
    with_console_plugin="yes"
    requested_console_plugin="no"
  ])
AC_ARG_WITH([static-console-plugin],[
AS_HELP_STRING([--with-static-console-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-console-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_console_plugin=${withval}
  ],[
    with_static_console_plugin=yes
])
AS_IF([test "x${with_static_console_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_console_plugin=no
  ],[
  shared_console_plugin=yes
])
AC_ARG_ENABLE([console-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-console-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-console-plugin],[Disable loading  by default.])
  ],
  [enable_console_plugin="$enableval"],
  [enable_console_plugin=yes])


AM_CONDITIONAL([BUILD_CONSOLE_PLUGIN_STATIC],
               [test "x${with_console_plugin}" = "xyes" -a ! "x${shared_console_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_CONSOLE_PLUGIN_SHARED],
               [test "x${with_console_plugin}" = "xyes" -a "x${shared_console_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_CONSOLE_PLUGIN],
               [test "x${with_console_plugin}" = "xyes"])
    
AS_IF([test "x$with_console_plugin" = "xyes"],[

      AS_IF([test "x${with_static_console_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_console_plugin" = "xyes"],[
          pandora_builtin_load_list="console,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_console_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="console,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_console_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libconsole_plugin.la"
     ],[
        AS_IF([test "x$enable_console_plugin" = "xyes"],[
          pandora_default_plugin_list="console,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([crc32-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-crc32-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-crc32-plugin],[Disable building ])
  ],[
    with_crc32_plugin="$withval"
    AS_IF([test "x$with_crc32_plugin" = "xyes"],[
      requested_crc32_plugin="yes"
    ],[
      requested_crc32_plugin="no"
    ])
  ],[
    with_crc32_plugin="yes"
    requested_crc32_plugin="no"
  ])
AC_ARG_WITH([static-crc32-plugin],[
AS_HELP_STRING([--with-static-crc32-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-crc32-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_crc32_plugin=${withval}
  ],[
    with_static_crc32_plugin=no
])
AS_IF([test "x${with_static_crc32_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_crc32_plugin=no
  ],[
  shared_crc32_plugin=yes
])
AC_ARG_ENABLE([crc32-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-crc32-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-crc32-plugin],[Disable loading  by default.])
  ],
  [enable_crc32_plugin="$enableval"],
  [enable_crc32_plugin=yes])


AM_CONDITIONAL([BUILD_CRC32_PLUGIN_STATIC],
               [test "x${with_crc32_plugin}" = "xyes" -a ! "x${shared_crc32_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_CRC32_PLUGIN_SHARED],
               [test "x${with_crc32_plugin}" = "xyes" -a "x${shared_crc32_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_CRC32_PLUGIN],
               [test "x${with_crc32_plugin}" = "xyes"])
    
AS_IF([test "x$with_crc32_plugin" = "xyes"],[

      pandora_plugin_test_list="crc32,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_crc32_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_crc32_plugin" = "xyes"],[
          pandora_builtin_load_list="crc32,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_crc32_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} \${top_builddir}/${top_builddir}/drizzled/algorithm/libhash.la"
        ])
        pandora_builtin_list="crc32,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_crc32_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libcrc32_plugin.la"
     ],[
        AS_IF([test "x$enable_crc32_plugin" = "xyes"],[
          pandora_default_plugin_list="crc32,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([debug-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-debug-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-debug-plugin],[Disable building ])
  ],[
    with_debug_plugin="$withval"
    AS_IF([test "x$with_debug_plugin" = "xyes"],[
      requested_debug_plugin="yes"
    ],[
      requested_debug_plugin="no"
    ])
  ],[
    with_debug_plugin="yes"
    requested_debug_plugin="no"
  ])
AC_ARG_WITH([static-debug-plugin],[
AS_HELP_STRING([--with-static-debug-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-debug-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_debug_plugin=${withval}
  ],[
    with_static_debug_plugin=no
])
AS_IF([test "x${with_static_debug_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_debug_plugin=no
  ],[
  shared_debug_plugin=yes
])
AC_ARG_ENABLE([debug-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-debug-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-debug-plugin],[Disable loading  by default.])
  ],
  [enable_debug_plugin="$enableval"],
  [enable_debug_plugin=no])


AM_CONDITIONAL([BUILD_DEBUG_PLUGIN_STATIC],
               [test "x${with_debug_plugin}" = "xyes" -a ! "x${shared_debug_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_DEBUG_PLUGIN_SHARED],
               [test "x${with_debug_plugin}" = "xyes" -a "x${shared_debug_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_DEBUG_PLUGIN],
               [test "x${with_debug_plugin}" = "xyes"])
    
AS_IF([test "x$with_debug_plugin" = "xyes"],[

      pandora_plugin_test_list="debug,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_debug_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_debug_plugin" = "xyes"],[
          pandora_builtin_load_list="debug,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_debug_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="debug,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_debug_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libdebug_plugin.la"
     ],[
        AS_IF([test "x$enable_debug_plugin" = "xyes"],[
          pandora_default_plugin_list="debug,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([default-replicator-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-default-replicator-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-default-replicator-plugin],[Disable building ])
  ],[
    with_default_replicator_plugin="$withval"
    AS_IF([test "x$with_default_replicator_plugin" = "xyes"],[
      requested_default_replicator_plugin="yes"
    ],[
      requested_default_replicator_plugin="no"
    ])
  ],[
    with_default_replicator_plugin="yes"
    requested_default_replicator_plugin="no"
  ])
AC_ARG_WITH([static-default-replicator-plugin],[
AS_HELP_STRING([--with-static-default-replicator-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-default-replicator-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_default_replicator_plugin=${withval}
  ],[
    with_static_default_replicator_plugin=no
])
AS_IF([test "x${with_static_default_replicator_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_default_replicator_plugin=no
  ],[
  shared_default_replicator_plugin=yes
])
AC_ARG_ENABLE([default-replicator-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-default-replicator-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-default-replicator-plugin],[Disable loading  by default.])
  ],
  [enable_default_replicator_plugin="$enableval"],
  [enable_default_replicator_plugin=yes])


AM_CONDITIONAL([BUILD_DEFAULT_REPLICATOR_PLUGIN_STATIC],
               [test "x${with_default_replicator_plugin}" = "xyes" -a ! "x${shared_default_replicator_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_DEFAULT_REPLICATOR_PLUGIN_SHARED],
               [test "x${with_default_replicator_plugin}" = "xyes" -a "x${shared_default_replicator_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_DEFAULT_REPLICATOR_PLUGIN],
               [test "x${with_default_replicator_plugin}" = "xyes"])
    
AS_IF([test "x$with_default_replicator_plugin" = "xyes"],[

      AS_IF([test "x${with_static_default_replicator_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_default_replicator_plugin" = "xyes"],[
          pandora_builtin_load_list="default_replicator,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_default_replicator_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="default_replicator,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_default_replicator_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libdefault_replicator_plugin.la"
     ],[
        AS_IF([test "x$enable_default_replicator_plugin" = "xyes"],[
          pandora_default_plugin_list="default_replicator,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([drizzle-protocol-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-drizzle-protocol-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-drizzle-protocol-plugin],[Disable building ])
  ],[
    with_drizzle_protocol_plugin="$withval"
    AS_IF([test "x$with_drizzle_protocol_plugin" = "xyes"],[
      requested_drizzle_protocol_plugin="yes"
    ],[
      requested_drizzle_protocol_plugin="no"
    ])
  ],[
    with_drizzle_protocol_plugin="yes"
    requested_drizzle_protocol_plugin="no"
  ])
AC_ARG_WITH([static-drizzle-protocol-plugin],[
AS_HELP_STRING([--with-static-drizzle-protocol-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-drizzle-protocol-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_drizzle_protocol_plugin=${withval}
  ],[
    with_static_drizzle_protocol_plugin=yes
])
AS_IF([test "x${with_static_drizzle_protocol_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_drizzle_protocol_plugin=no
  ],[
  shared_drizzle_protocol_plugin=yes
])
AC_ARG_ENABLE([drizzle-protocol-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-drizzle-protocol-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-drizzle-protocol-plugin],[Disable loading  by default.])
  ],
  [enable_drizzle_protocol_plugin="$enableval"],
  [enable_drizzle_protocol_plugin=yes])


AM_CONDITIONAL([BUILD_DRIZZLE_PROTOCOL_PLUGIN_STATIC],
               [test "x${with_drizzle_protocol_plugin}" = "xyes" -a ! "x${shared_drizzle_protocol_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_DRIZZLE_PROTOCOL_PLUGIN_SHARED],
               [test "x${with_drizzle_protocol_plugin}" = "xyes" -a "x${shared_drizzle_protocol_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_DRIZZLE_PROTOCOL_PLUGIN],
               [test "x${with_drizzle_protocol_plugin}" = "xyes"])
    
AS_IF([test "x$with_drizzle_protocol_plugin" = "xyes"],[

      AS_IF([test "x${with_static_drizzle_protocol_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_drizzle_protocol_plugin" = "xyes"],[
          pandora_builtin_load_list="drizzle_protocol,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_drizzle_protocol_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} \${top_builddir}/drizzled/algorithm/libhash.la"
        ])
        pandora_builtin_list="drizzle_protocol,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_drizzle_protocol_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libdrizzle_protocol_plugin.la"
     ],[
        AS_IF([test "x$enable_drizzle_protocol_plugin" = "xyes"],[
          pandora_default_plugin_list="drizzle_protocol,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([errmsg-stderr-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-errmsg-stderr-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-errmsg-stderr-plugin],[Disable building ])
  ],[
    with_errmsg_stderr_plugin="$withval"
    AS_IF([test "x$with_errmsg_stderr_plugin" = "xyes"],[
      requested_errmsg_stderr_plugin="yes"
    ],[
      requested_errmsg_stderr_plugin="no"
    ])
  ],[
    with_errmsg_stderr_plugin="yes"
    requested_errmsg_stderr_plugin="no"
  ])
AC_ARG_WITH([static-errmsg-stderr-plugin],[
AS_HELP_STRING([--with-static-errmsg-stderr-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-errmsg-stderr-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_errmsg_stderr_plugin=${withval}
  ],[
    with_static_errmsg_stderr_plugin=yes
])
AS_IF([test "x${with_static_errmsg_stderr_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_errmsg_stderr_plugin=no
  ],[
  shared_errmsg_stderr_plugin=yes
])
AC_ARG_ENABLE([errmsg-stderr-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-errmsg-stderr-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-errmsg-stderr-plugin],[Disable loading  by default.])
  ],
  [enable_errmsg_stderr_plugin="$enableval"],
  [enable_errmsg_stderr_plugin=yes])


AM_CONDITIONAL([BUILD_ERRMSG_STDERR_PLUGIN_STATIC],
               [test "x${with_errmsg_stderr_plugin}" = "xyes" -a ! "x${shared_errmsg_stderr_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_ERRMSG_STDERR_PLUGIN_SHARED],
               [test "x${with_errmsg_stderr_plugin}" = "xyes" -a "x${shared_errmsg_stderr_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_ERRMSG_STDERR_PLUGIN],
               [test "x${with_errmsg_stderr_plugin}" = "xyes"])
    
AS_IF([test "x$with_errmsg_stderr_plugin" = "xyes"],[

      pandora_plugin_test_list="errmsg_stderr,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_errmsg_stderr_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_errmsg_stderr_plugin" = "xyes"],[
          pandora_builtin_load_list="errmsg_stderr,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_errmsg_stderr_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="errmsg_stderr,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_errmsg_stderr_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/liberrmsg_stderr_plugin.la"
     ],[
        AS_IF([test "x$enable_errmsg_stderr_plugin" = "xyes"],[
          pandora_default_plugin_list="errmsg_stderr,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([error-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-error-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-error-dictionary-plugin],[Disable building ])
  ],[
    with_error_dictionary_plugin="$withval"
    AS_IF([test "x$with_error_dictionary_plugin" = "xyes"],[
      requested_error_dictionary_plugin="yes"
    ],[
      requested_error_dictionary_plugin="no"
    ])
  ],[
    with_error_dictionary_plugin="yes"
    requested_error_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-error-dictionary-plugin],[
AS_HELP_STRING([--with-static-error-dictionary-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-error-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_error_dictionary_plugin=${withval}
  ],[
    with_static_error_dictionary_plugin=yes
])
AS_IF([test "x${with_static_error_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_error_dictionary_plugin=no
  ],[
  shared_error_dictionary_plugin=yes
])
AC_ARG_ENABLE([error-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-error-dictionary-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-error-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_error_dictionary_plugin="$enableval"],
  [enable_error_dictionary_plugin=yes])


AM_CONDITIONAL([BUILD_ERROR_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_error_dictionary_plugin}" = "xyes" -a ! "x${shared_error_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_ERROR_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_error_dictionary_plugin}" = "xyes" -a "x${shared_error_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_ERROR_DICTIONARY_PLUGIN],
               [test "x${with_error_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_error_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="error_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_error_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_error_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="error_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_error_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="error_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_error_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/liberror_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_error_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="error_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([filtered-replicator-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-filtered-replicator-plugin],[Build . @<:@default=no@:>@])
AS_HELP_STRING([--without-filtered-replicator-plugin],[Disable building ])
  ],[
    with_filtered_replicator_plugin="$withval"
    AS_IF([test "x$with_filtered_replicator_plugin" = "xyes"],[
      requested_filtered_replicator_plugin="yes"
    ],[
      requested_filtered_replicator_plugin="no"
    ])
  ],[
    with_filtered_replicator_plugin="no"
    requested_filtered_replicator_plugin="no"
  ])
AC_ARG_WITH([static-filtered-replicator-plugin],[
AS_HELP_STRING([--with-static-filtered-replicator-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-filtered-replicator-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_filtered_replicator_plugin=${withval}
  ],[
    with_static_filtered_replicator_plugin=no
])
AS_IF([test "x${with_static_filtered_replicator_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_filtered_replicator_plugin=no
  ],[
  shared_filtered_replicator_plugin=yes
])
AC_ARG_ENABLE([filtered-replicator-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-filtered-replicator-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-filtered-replicator-plugin],[Disable loading  by default.])
  ],
  [enable_filtered_replicator_plugin="$enableval"],
  [enable_filtered_replicator_plugin=no])


AM_CONDITIONAL([BUILD_FILTERED_REPLICATOR_PLUGIN_STATIC],
               [test "x${with_filtered_replicator_plugin}" = "xyes" -a ! "x${shared_filtered_replicator_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_FILTERED_REPLICATOR_PLUGIN_SHARED],
               [test "x${with_filtered_replicator_plugin}" = "xyes" -a "x${shared_filtered_replicator_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_FILTERED_REPLICATOR_PLUGIN],
               [test "x${with_filtered_replicator_plugin}" = "xyes"])
    
AS_IF([test "x$with_filtered_replicator_plugin" = "xyes"],[

      pandora_plugin_test_list="filtered_replicator,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_filtered_replicator_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_filtered_replicator_plugin" = "xyes"],[
          pandora_builtin_load_list="filtered_replicator,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_filtered_replicator_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="filtered_replicator,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_filtered_replicator_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libfiltered_replicator_plugin.la"
     ],[
        AS_IF([test "x$enable_filtered_replicator_plugin" = "xyes"],[
          pandora_default_plugin_list="filtered_replicator,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([function-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-function-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-function-dictionary-plugin],[Disable building ])
  ],[
    with_function_dictionary_plugin="$withval"
    AS_IF([test "x$with_function_dictionary_plugin" = "xyes"],[
      requested_function_dictionary_plugin="yes"
    ],[
      requested_function_dictionary_plugin="no"
    ])
  ],[
    with_function_dictionary_plugin="yes"
    requested_function_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-function-dictionary-plugin],[
AS_HELP_STRING([--with-static-function-dictionary-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-function-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_function_dictionary_plugin=${withval}
  ],[
    with_static_function_dictionary_plugin=no
])
AS_IF([test "x${with_static_function_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_function_dictionary_plugin=no
  ],[
  shared_function_dictionary_plugin=yes
])
AC_ARG_ENABLE([function-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-function-dictionary-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-function-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_function_dictionary_plugin="$enableval"],
  [enable_function_dictionary_plugin=no])


AM_CONDITIONAL([BUILD_FUNCTION_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_function_dictionary_plugin}" = "xyes" -a ! "x${shared_function_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_FUNCTION_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_function_dictionary_plugin}" = "xyes" -a "x${shared_function_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_FUNCTION_DICTIONARY_PLUGIN],
               [test "x${with_function_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_function_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="function_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_function_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_function_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="function_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_function_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="function_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_function_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libfunction_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_function_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="function_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([function-engine-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-function-engine-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-function-engine-plugin],[Disable building ])
  ],[
    with_function_engine_plugin="$withval"
    AS_IF([test "x$with_function_engine_plugin" = "xyes"],[
      requested_function_engine_plugin="yes"
    ],[
      requested_function_engine_plugin="no"
    ])
  ],[
    with_function_engine_plugin="yes"
    requested_function_engine_plugin="no"
  ])
AC_ARG_WITH([static-function-engine-plugin],[
AS_HELP_STRING([--with-static-function-engine-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-function-engine-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_function_engine_plugin=${withval}
  ],[
    with_static_function_engine_plugin=yes
])
AS_IF([test "x${with_static_function_engine_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_function_engine_plugin=no
  ],[
  shared_function_engine_plugin=yes
])
AC_ARG_ENABLE([function-engine-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-function-engine-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-function-engine-plugin],[Disable loading  by default.])
  ],
  [enable_function_engine_plugin="$enableval"],
  [enable_function_engine_plugin=yes])


AM_CONDITIONAL([BUILD_FUNCTION_ENGINE_PLUGIN_STATIC],
               [test "x${with_function_engine_plugin}" = "xyes" -a ! "x${shared_function_engine_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_FUNCTION_ENGINE_PLUGIN_SHARED],
               [test "x${with_function_engine_plugin}" = "xyes" -a "x${shared_function_engine_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_FUNCTION_ENGINE_PLUGIN],
               [test "x${with_function_engine_plugin}" = "xyes"])
    
AS_IF([test "x$with_function_engine_plugin" = "xyes"],[

      AS_IF([test "x${with_static_function_engine_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_function_engine_plugin" = "xyes"],[
          pandora_builtin_load_list="function_engine,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_function_engine_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="function_engine,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_function_engine_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libfunction_engine_plugin.la"
     ],[
        AS_IF([test "x$enable_function_engine_plugin" = "xyes"],[
          pandora_default_plugin_list="function_engine,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([gearman-udf-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-gearman-udf-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-gearman-udf-plugin],[Disable building ])
  ],[
    with_gearman_udf_plugin="$withval"
    AS_IF([test "x$with_gearman_udf_plugin" = "xyes"],[
      requested_gearman_udf_plugin="yes"
    ],[
      requested_gearman_udf_plugin="no"
    ])
  ],[
    with_gearman_udf_plugin="yes"
    requested_gearman_udf_plugin="no"
  ])
AC_ARG_WITH([static-gearman-udf-plugin],[
AS_HELP_STRING([--with-static-gearman-udf-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-gearman-udf-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_gearman_udf_plugin=${withval}
  ],[
    with_static_gearman_udf_plugin=no
])
AS_IF([test "x${with_static_gearman_udf_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_gearman_udf_plugin=no
  ],[
  shared_gearman_udf_plugin=yes
])
AC_ARG_ENABLE([gearman-udf-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-gearman-udf-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-gearman-udf-plugin],[Disable loading  by default.])
  ],
  [enable_gearman_udf_plugin="$enableval"],
  [enable_gearman_udf_plugin=no])

m4_sinclude([plugin/gearman_udf/plugin.ac])

AS_IF([test "x${with_gearman_udf_plugin}" = "xyes" -a "x${ac_cv_libgearman}" = "xyes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_gearman_udf_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin gearman_udf was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_gearman_udf_plugin=no
      ])


AM_CONDITIONAL([BUILD_GEARMAN_UDF_PLUGIN_STATIC],
               [test "x${with_gearman_udf_plugin}" = "xyes" -a "x${ac_cv_libgearman}" = "xyes" -a ! "x${shared_gearman_udf_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_GEARMAN_UDF_PLUGIN_SHARED],
               [test "x${with_gearman_udf_plugin}" = "xyes" -a "x${ac_cv_libgearman}" = "xyes" -a "x${shared_gearman_udf_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_GEARMAN_UDF_PLUGIN],
               [test "x${with_gearman_udf_plugin}" = "xyes" -a "x${ac_cv_libgearman}" = "xyes"])
    
AS_IF([test "x$with_gearman_udf_plugin" = "xyes"],[

      AS_IF([test "x${with_static_gearman_udf_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_gearman_udf_plugin" = "xyes"],[
          pandora_builtin_load_list="gearman_udf,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_gearman_udf_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="gearman_udf,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_gearman_udf_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libgearman_udf_plugin.la"
     ],[
        AS_IF([test "x$enable_gearman_udf_plugin" = "xyes"],[
          pandora_default_plugin_list="gearman_udf,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([hello-events-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-hello-events-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-hello-events-plugin],[Disable building ])
  ],[
    with_hello_events_plugin="$withval"
    AS_IF([test "x$with_hello_events_plugin" = "xyes"],[
      requested_hello_events_plugin="yes"
    ],[
      requested_hello_events_plugin="no"
    ])
  ],[
    with_hello_events_plugin="yes"
    requested_hello_events_plugin="no"
  ])
AC_ARG_WITH([static-hello-events-plugin],[
AS_HELP_STRING([--with-static-hello-events-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-hello-events-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_hello_events_plugin=${withval}
  ],[
    with_static_hello_events_plugin=no
])
AS_IF([test "x${with_static_hello_events_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_hello_events_plugin=no
  ],[
  shared_hello_events_plugin=yes
])
AC_ARG_ENABLE([hello-events-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-hello-events-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-hello-events-plugin],[Disable loading  by default.])
  ],
  [enable_hello_events_plugin="$enableval"],
  [enable_hello_events_plugin=no])


AM_CONDITIONAL([BUILD_HELLO_EVENTS_PLUGIN_STATIC],
               [test "x${with_hello_events_plugin}" = "xyes" -a ! "x${shared_hello_events_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_HELLO_EVENTS_PLUGIN_SHARED],
               [test "x${with_hello_events_plugin}" = "xyes" -a "x${shared_hello_events_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_HELLO_EVENTS_PLUGIN],
               [test "x${with_hello_events_plugin}" = "xyes"])
    
AS_IF([test "x$with_hello_events_plugin" = "xyes"],[

      pandora_plugin_test_list="hello_events,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_hello_events_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_hello_events_plugin" = "xyes"],[
          pandora_builtin_load_list="hello_events,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_hello_events_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="hello_events,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_hello_events_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libhello_events_plugin.la"
     ],[
        AS_IF([test "x$enable_hello_events_plugin" = "xyes"],[
          pandora_default_plugin_list="hello_events,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([hello-world-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-hello-world-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-hello-world-plugin],[Disable building ])
  ],[
    with_hello_world_plugin="$withval"
    AS_IF([test "x$with_hello_world_plugin" = "xyes"],[
      requested_hello_world_plugin="yes"
    ],[
      requested_hello_world_plugin="no"
    ])
  ],[
    with_hello_world_plugin="yes"
    requested_hello_world_plugin="no"
  ])
AC_ARG_WITH([static-hello-world-plugin],[
AS_HELP_STRING([--with-static-hello-world-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-hello-world-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_hello_world_plugin=${withval}
  ],[
    with_static_hello_world_plugin=no
])
AS_IF([test "x${with_static_hello_world_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_hello_world_plugin=no
  ],[
  shared_hello_world_plugin=yes
])
AC_ARG_ENABLE([hello-world-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-hello-world-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-hello-world-plugin],[Disable loading  by default.])
  ],
  [enable_hello_world_plugin="$enableval"],
  [enable_hello_world_plugin=no])


AM_CONDITIONAL([BUILD_HELLO_WORLD_PLUGIN_STATIC],
               [test "x${with_hello_world_plugin}" = "xyes" -a ! "x${shared_hello_world_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_HELLO_WORLD_PLUGIN_SHARED],
               [test "x${with_hello_world_plugin}" = "xyes" -a "x${shared_hello_world_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_HELLO_WORLD_PLUGIN],
               [test "x${with_hello_world_plugin}" = "xyes"])
    
AS_IF([test "x$with_hello_world_plugin" = "xyes"],[

      pandora_plugin_test_list="hello_world,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_hello_world_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_hello_world_plugin" = "xyes"],[
          pandora_builtin_load_list="hello_world,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_hello_world_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="hello_world,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_hello_world_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libhello_world_plugin.la"
     ],[
        AS_IF([test "x$enable_hello_world_plugin" = "xyes"],[
          pandora_default_plugin_list="hello_world,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([hex-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-hex-functions-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-hex-functions-plugin],[Disable building ])
  ],[
    with_hex_functions_plugin="$withval"
    AS_IF([test "x$with_hex_functions_plugin" = "xyes"],[
      requested_hex_functions_plugin="yes"
    ],[
      requested_hex_functions_plugin="no"
    ])
  ],[
    with_hex_functions_plugin="yes"
    requested_hex_functions_plugin="no"
  ])
AC_ARG_WITH([static-hex-functions-plugin],[
AS_HELP_STRING([--with-static-hex-functions-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-hex-functions-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_hex_functions_plugin=${withval}
  ],[
    with_static_hex_functions_plugin=no
])
AS_IF([test "x${with_static_hex_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_hex_functions_plugin=no
  ],[
  shared_hex_functions_plugin=yes
])
AC_ARG_ENABLE([hex-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-hex-functions-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-hex-functions-plugin],[Disable loading  by default.])
  ],
  [enable_hex_functions_plugin="$enableval"],
  [enable_hex_functions_plugin=yes])


AM_CONDITIONAL([BUILD_HEX_FUNCTIONS_PLUGIN_STATIC],
               [test "x${with_hex_functions_plugin}" = "xyes" -a ! "x${shared_hex_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_HEX_FUNCTIONS_PLUGIN_SHARED],
               [test "x${with_hex_functions_plugin}" = "xyes" -a "x${shared_hex_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_HEX_FUNCTIONS_PLUGIN],
               [test "x${with_hex_functions_plugin}" = "xyes"])
    
AS_IF([test "x$with_hex_functions_plugin" = "xyes"],[

      AS_IF([test "x${with_static_hex_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_hex_functions_plugin" = "xyes"],[
          pandora_builtin_load_list="hex_functions,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_hex_functions_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="hex_functions,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_hex_functions_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libhex_functions_plugin.la"
     ],[
        AS_IF([test "x$enable_hex_functions_plugin" = "xyes"],[
          pandora_default_plugin_list="hex_functions,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([http-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-http-functions-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-http-functions-plugin],[Disable building ])
  ],[
    with_http_functions_plugin="$withval"
    AS_IF([test "x$with_http_functions_plugin" = "xyes"],[
      requested_http_functions_plugin="yes"
    ],[
      requested_http_functions_plugin="no"
    ])
  ],[
    with_http_functions_plugin="yes"
    requested_http_functions_plugin="no"
  ])
AC_ARG_WITH([static-http-functions-plugin],[
AS_HELP_STRING([--with-static-http-functions-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-http-functions-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_http_functions_plugin=${withval}
  ],[
    with_static_http_functions_plugin=no
])
AS_IF([test "x${with_static_http_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_http_functions_plugin=no
  ],[
  shared_http_functions_plugin=yes
])
AC_ARG_ENABLE([http-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-http-functions-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-http-functions-plugin],[Disable loading  by default.])
  ],
  [enable_http_functions_plugin="$enableval"],
  [enable_http_functions_plugin=no])

m4_sinclude([plugin/http_functions/plugin.ac])

AS_IF([test "x${with_http_functions_plugin}" = "xyes" -a "${ac_cv_libcurl}" = "yes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_http_functions_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin http_functions was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_http_functions_plugin=no
      ])


AM_CONDITIONAL([BUILD_HTTP_FUNCTIONS_PLUGIN_STATIC],
               [test "x${with_http_functions_plugin}" = "xyes" -a "${ac_cv_libcurl}" = "yes" -a ! "x${shared_http_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_HTTP_FUNCTIONS_PLUGIN_SHARED],
               [test "x${with_http_functions_plugin}" = "xyes" -a "${ac_cv_libcurl}" = "yes" -a "x${shared_http_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_HTTP_FUNCTIONS_PLUGIN],
               [test "x${with_http_functions_plugin}" = "xyes" -a "${ac_cv_libcurl}" = "yes"])
    
AS_IF([test "x$with_http_functions_plugin" = "xyes"],[

      AS_IF([test "x${with_static_http_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_http_functions_plugin" = "xyes"],[
          pandora_builtin_load_list="http_functions,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_http_functions_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="http_functions,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_http_functions_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libhttp_functions_plugin.la"
     ],[
        AS_IF([test "x$enable_http_functions_plugin" = "xyes"],[
          pandora_default_plugin_list="http_functions,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([information-schema-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-information-schema-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-information-schema-dictionary-plugin],[Disable building ])
  ],[
    with_information_schema_dictionary_plugin="$withval"
    AS_IF([test "x$with_information_schema_dictionary_plugin" = "xyes"],[
      requested_information_schema_dictionary_plugin="yes"
    ],[
      requested_information_schema_dictionary_plugin="no"
    ])
  ],[
    with_information_schema_dictionary_plugin="yes"
    requested_information_schema_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-information-schema-dictionary-plugin],[
AS_HELP_STRING([--with-static-information-schema-dictionary-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-information-schema-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_information_schema_dictionary_plugin=${withval}
  ],[
    with_static_information_schema_dictionary_plugin=yes
])
AS_IF([test "x${with_static_information_schema_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_information_schema_dictionary_plugin=no
  ],[
  shared_information_schema_dictionary_plugin=yes
])
AC_ARG_ENABLE([information-schema-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-information-schema-dictionary-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-information-schema-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_information_schema_dictionary_plugin="$enableval"],
  [enable_information_schema_dictionary_plugin=yes])


AM_CONDITIONAL([BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_information_schema_dictionary_plugin}" = "xyes" -a ! "x${shared_information_schema_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_information_schema_dictionary_plugin}" = "xyes" -a "x${shared_information_schema_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN],
               [test "x${with_information_schema_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_information_schema_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="information_schema_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_information_schema_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_information_schema_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="information_schema_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_information_schema_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="information_schema_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_information_schema_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libinformation_schema_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_information_schema_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="information_schema_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([innobase-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-innobase-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-innobase-plugin],[Disable building ])
  ],[
    with_innobase_plugin="$withval"
    AS_IF([test "x$with_innobase_plugin" = "xyes"],[
      requested_innobase_plugin="yes"
    ],[
      requested_innobase_plugin="no"
    ])
  ],[
    with_innobase_plugin="yes"
    requested_innobase_plugin="no"
  ])
AC_ARG_WITH([static-innobase-plugin],[
AS_HELP_STRING([--with-static-innobase-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-innobase-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_innobase_plugin=${withval}
  ],[
    with_static_innobase_plugin=yes
])
AS_IF([test "x${with_static_innobase_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_innobase_plugin=no
  ],[
  shared_innobase_plugin=yes
])
AC_ARG_ENABLE([innobase-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-innobase-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-innobase-plugin],[Disable loading  by default.])
  ],
  [enable_innobase_plugin="$enableval"],
  [enable_innobase_plugin=yes])

m4_sinclude([plugin/innobase/plugin.ac])

AM_CONDITIONAL([BUILD_INNOBASE_PLUGIN_STATIC],
               [test "x${with_innobase_plugin}" = "xyes" -a ! "x${shared_innobase_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_INNOBASE_PLUGIN_SHARED],
               [test "x${with_innobase_plugin}" = "xyes" -a "x${shared_innobase_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_INNOBASE_PLUGIN],
               [test "x${with_innobase_plugin}" = "xyes"])
    
AS_IF([test "x$with_innobase_plugin" = "xyes"],[

      pandora_plugin_test_list="innobase,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_innobase_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_innobase_plugin" = "xyes"],[
          pandora_builtin_load_list="innobase,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_innobase_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} \${top_builddir}/plugin/innobase/libinnobase.la"
        ])
        pandora_builtin_list="innobase,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_innobase_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libinnobase_plugin.la"
     ],[
        AS_IF([test "x$enable_innobase_plugin" = "xyes"],[
          pandora_default_plugin_list="innobase,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([ipv6-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-ipv6-function-plugin],[Build . @<:@default=no@:>@])
AS_HELP_STRING([--without-ipv6-function-plugin],[Disable building ])
  ],[
    with_ipv6_function_plugin="$withval"
    AS_IF([test "x$with_ipv6_function_plugin" = "xyes"],[
      requested_ipv6_function_plugin="yes"
    ],[
      requested_ipv6_function_plugin="no"
    ])
  ],[
    with_ipv6_function_plugin="no"
    requested_ipv6_function_plugin="no"
  ])
AC_ARG_WITH([static-ipv6-function-plugin],[
AS_HELP_STRING([--with-static-ipv6-function-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-ipv6-function-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_ipv6_function_plugin=${withval}
  ],[
    with_static_ipv6_function_plugin=yes
])
AS_IF([test "x${with_static_ipv6_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_ipv6_function_plugin=no
  ],[
  shared_ipv6_function_plugin=yes
])
AC_ARG_ENABLE([ipv6-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-ipv6-function-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-ipv6-function-plugin],[Disable loading  by default.])
  ],
  [enable_ipv6_function_plugin="$enableval"],
  [enable_ipv6_function_plugin=no])


AM_CONDITIONAL([BUILD_IPV6_FUNCTION_PLUGIN_STATIC],
               [test "x${with_ipv6_function_plugin}" = "xyes" -a ! "x${shared_ipv6_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_IPV6_FUNCTION_PLUGIN_SHARED],
               [test "x${with_ipv6_function_plugin}" = "xyes" -a "x${shared_ipv6_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_IPV6_FUNCTION_PLUGIN],
               [test "x${with_ipv6_function_plugin}" = "xyes"])
    
AS_IF([test "x$with_ipv6_function_plugin" = "xyes"],[

      AS_IF([test "x${with_static_ipv6_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_ipv6_function_plugin" = "xyes"],[
          pandora_builtin_load_list="ipv6_function,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_ipv6_function_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="ipv6_function,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_ipv6_function_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libipv6_function_plugin.la"
     ],[
        AS_IF([test "x$enable_ipv6_function_plugin" = "xyes"],[
          pandora_default_plugin_list="ipv6_function,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([js-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-js-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-js-plugin],[Disable building ])
  ],[
    with_js_plugin="$withval"
    AS_IF([test "x$with_js_plugin" = "xyes"],[
      requested_js_plugin="yes"
    ],[
      requested_js_plugin="no"
    ])
  ],[
    with_js_plugin="yes"
    requested_js_plugin="no"
  ])
AC_ARG_WITH([static-js-plugin],[
AS_HELP_STRING([--with-static-js-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-js-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_js_plugin=${withval}
  ],[
    with_static_js_plugin=no
])
AS_IF([test "x${with_static_js_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_js_plugin=no
  ],[
  shared_js_plugin=yes
])
AC_ARG_ENABLE([js-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-js-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-js-plugin],[Disable loading  by default.])
  ],
  [enable_js_plugin="$enableval"],
  [enable_js_plugin=yes])

m4_sinclude([plugin/js/plugin.ac])

AS_IF([test "x${with_js_plugin}" = "xyes" -a "$ac_cv_libv8" = "yes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_js_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin js was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_js_plugin=no
      ])


AM_CONDITIONAL([BUILD_JS_PLUGIN_STATIC],
               [test "x${with_js_plugin}" = "xyes" -a "$ac_cv_libv8" = "yes" -a ! "x${shared_js_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_JS_PLUGIN_SHARED],
               [test "x${with_js_plugin}" = "xyes" -a "$ac_cv_libv8" = "yes" -a "x${shared_js_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_JS_PLUGIN],
               [test "x${with_js_plugin}" = "xyes" -a "$ac_cv_libv8" = "yes"])
    
AS_IF([test "x$with_js_plugin" = "xyes"],[

      pandora_plugin_test_list="js,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_js_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_js_plugin" = "xyes"],[
          pandora_builtin_load_list="js,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_js_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="js,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_js_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libjs_plugin.la"
     ],[
        AS_IF([test "x$enable_js_plugin" = "xyes"],[
          pandora_default_plugin_list="js,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([json-server-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-json-server-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-json-server-plugin],[Disable building ])
  ],[
    with_json_server_plugin="$withval"
    AS_IF([test "x$with_json_server_plugin" = "xyes"],[
      requested_json_server_plugin="yes"
    ],[
      requested_json_server_plugin="no"
    ])
  ],[
    with_json_server_plugin="yes"
    requested_json_server_plugin="no"
  ])
AC_ARG_WITH([static-json-server-plugin],[
AS_HELP_STRING([--with-static-json-server-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-json-server-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_json_server_plugin=${withval}
  ],[
    with_static_json_server_plugin=no
])
AS_IF([test "x${with_static_json_server_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_json_server_plugin=no
  ],[
  shared_json_server_plugin=yes
])
AC_ARG_ENABLE([json-server-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-json-server-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-json-server-plugin],[Disable loading  by default.])
  ],
  [enable_json_server_plugin="$enableval"],
  [enable_json_server_plugin=no])

m4_sinclude([plugin/json_server/plugin.ac])

AS_IF([test "x${with_json_server_plugin}" = "xyes" -a "x${ac_cv_libevent}" = "xyes" -a "x$pandora_cv_libevent_recent" = "xyes" -a "x${ac_cv_libcurl}" = "xyes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_json_server_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin json_server was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_json_server_plugin=no
      ])


AM_CONDITIONAL([BUILD_JSON_SERVER_PLUGIN_STATIC],
               [test "x${with_json_server_plugin}" = "xyes" -a "x${ac_cv_libevent}" = "xyes" -a "x$pandora_cv_libevent_recent" = "xyes" -a "x${ac_cv_libcurl}" = "xyes" -a ! "x${shared_json_server_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_JSON_SERVER_PLUGIN_SHARED],
               [test "x${with_json_server_plugin}" = "xyes" -a "x${ac_cv_libevent}" = "xyes" -a "x$pandora_cv_libevent_recent" = "xyes" -a "x${ac_cv_libcurl}" = "xyes" -a "x${shared_json_server_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_JSON_SERVER_PLUGIN],
               [test "x${with_json_server_plugin}" = "xyes" -a "x${ac_cv_libevent}" = "xyes" -a "x$pandora_cv_libevent_recent" = "xyes" -a "x${ac_cv_libcurl}" = "xyes"])
    
AS_IF([test "x$with_json_server_plugin" = "xyes"],[

      pandora_plugin_test_list="json_server,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_json_server_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_json_server_plugin" = "xyes"],[
          pandora_builtin_load_list="json_server,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_json_server_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="json_server,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_json_server_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libjson_server_plugin.la"
     ],[
        AS_IF([test "x$enable_json_server_plugin" = "xyes"],[
          pandora_default_plugin_list="json_server,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([length-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-length-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-length-plugin],[Disable building ])
  ],[
    with_length_plugin="$withval"
    AS_IF([test "x$with_length_plugin" = "xyes"],[
      requested_length_plugin="yes"
    ],[
      requested_length_plugin="no"
    ])
  ],[
    with_length_plugin="yes"
    requested_length_plugin="no"
  ])
AC_ARG_WITH([static-length-plugin],[
AS_HELP_STRING([--with-static-length-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-length-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_length_plugin=${withval}
  ],[
    with_static_length_plugin=no
])
AS_IF([test "x${with_static_length_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_length_plugin=no
  ],[
  shared_length_plugin=yes
])
AC_ARG_ENABLE([length-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-length-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-length-plugin],[Disable loading  by default.])
  ],
  [enable_length_plugin="$enableval"],
  [enable_length_plugin=yes])


AM_CONDITIONAL([BUILD_LENGTH_PLUGIN_STATIC],
               [test "x${with_length_plugin}" = "xyes" -a ! "x${shared_length_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_LENGTH_PLUGIN_SHARED],
               [test "x${with_length_plugin}" = "xyes" -a "x${shared_length_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_LENGTH_PLUGIN],
               [test "x${with_length_plugin}" = "xyes"])
    
AS_IF([test "x$with_length_plugin" = "xyes"],[

      AS_IF([test "x${with_static_length_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_length_plugin" = "xyes"],[
          pandora_builtin_load_list="length,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_length_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="length,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_length_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/liblength_plugin.la"
     ],[
        AS_IF([test "x$enable_length_plugin" = "xyes"],[
          pandora_default_plugin_list="length,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([logging-gearman-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-logging-gearman-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-logging-gearman-plugin],[Disable building ])
  ],[
    with_logging_gearman_plugin="$withval"
    AS_IF([test "x$with_logging_gearman_plugin" = "xyes"],[
      requested_logging_gearman_plugin="yes"
    ],[
      requested_logging_gearman_plugin="no"
    ])
  ],[
    with_logging_gearman_plugin="yes"
    requested_logging_gearman_plugin="no"
  ])
AC_ARG_WITH([static-logging-gearman-plugin],[
AS_HELP_STRING([--with-static-logging-gearman-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-logging-gearman-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_logging_gearman_plugin=${withval}
  ],[
    with_static_logging_gearman_plugin=no
])
AS_IF([test "x${with_static_logging_gearman_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_logging_gearman_plugin=no
  ],[
  shared_logging_gearman_plugin=yes
])
AC_ARG_ENABLE([logging-gearman-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-logging-gearman-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-logging-gearman-plugin],[Disable loading  by default.])
  ],
  [enable_logging_gearman_plugin="$enableval"],
  [enable_logging_gearman_plugin=no])

m4_sinclude([plugin/logging_gearman/plugin.ac])

AS_IF([test "x${with_logging_gearman_plugin}" = "xyes" -a "${ac_cv_libgearman}" = "yes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_logging_gearman_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin logging_gearman was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_logging_gearman_plugin=no
      ])


AM_CONDITIONAL([BUILD_LOGGING_GEARMAN_PLUGIN_STATIC],
               [test "x${with_logging_gearman_plugin}" = "xyes" -a "${ac_cv_libgearman}" = "yes" -a ! "x${shared_logging_gearman_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_LOGGING_GEARMAN_PLUGIN_SHARED],
               [test "x${with_logging_gearman_plugin}" = "xyes" -a "${ac_cv_libgearman}" = "yes" -a "x${shared_logging_gearman_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_LOGGING_GEARMAN_PLUGIN],
               [test "x${with_logging_gearman_plugin}" = "xyes" -a "${ac_cv_libgearman}" = "yes"])
    
AS_IF([test "x$with_logging_gearman_plugin" = "xyes"],[

      AS_IF([test "x${with_static_logging_gearman_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_logging_gearman_plugin" = "xyes"],[
          pandora_builtin_load_list="logging_gearman,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_logging_gearman_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="logging_gearman,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_logging_gearman_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/liblogging_gearman_plugin.la"
     ],[
        AS_IF([test "x$enable_logging_gearman_plugin" = "xyes"],[
          pandora_default_plugin_list="logging_gearman,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([logging-query-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-logging-query-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-logging-query-plugin],[Disable building ])
  ],[
    with_logging_query_plugin="$withval"
    AS_IF([test "x$with_logging_query_plugin" = "xyes"],[
      requested_logging_query_plugin="yes"
    ],[
      requested_logging_query_plugin="no"
    ])
  ],[
    with_logging_query_plugin="yes"
    requested_logging_query_plugin="no"
  ])
AC_ARG_WITH([static-logging-query-plugin],[
AS_HELP_STRING([--with-static-logging-query-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-logging-query-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_logging_query_plugin=${withval}
  ],[
    with_static_logging_query_plugin=no
])
AS_IF([test "x${with_static_logging_query_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_logging_query_plugin=no
  ],[
  shared_logging_query_plugin=yes
])
AC_ARG_ENABLE([logging-query-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-logging-query-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-logging-query-plugin],[Disable loading  by default.])
  ],
  [enable_logging_query_plugin="$enableval"],
  [enable_logging_query_plugin=no])


AM_CONDITIONAL([BUILD_LOGGING_QUERY_PLUGIN_STATIC],
               [test "x${with_logging_query_plugin}" = "xyes" -a ! "x${shared_logging_query_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_LOGGING_QUERY_PLUGIN_SHARED],
               [test "x${with_logging_query_plugin}" = "xyes" -a "x${shared_logging_query_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_LOGGING_QUERY_PLUGIN],
               [test "x${with_logging_query_plugin}" = "xyes"])
    
AS_IF([test "x$with_logging_query_plugin" = "xyes"],[

      pandora_plugin_test_list="logging_query,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_logging_query_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_logging_query_plugin" = "xyes"],[
          pandora_builtin_load_list="logging_query,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_logging_query_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="logging_query,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_logging_query_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/liblogging_query_plugin.la"
     ],[
        AS_IF([test "x$enable_logging_query_plugin" = "xyes"],[
          pandora_default_plugin_list="logging_query,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([logging-stats-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-logging-stats-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-logging-stats-plugin],[Disable building ])
  ],[
    with_logging_stats_plugin="$withval"
    AS_IF([test "x$with_logging_stats_plugin" = "xyes"],[
      requested_logging_stats_plugin="yes"
    ],[
      requested_logging_stats_plugin="no"
    ])
  ],[
    with_logging_stats_plugin="yes"
    requested_logging_stats_plugin="no"
  ])
AC_ARG_WITH([static-logging-stats-plugin],[
AS_HELP_STRING([--with-static-logging-stats-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-logging-stats-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_logging_stats_plugin=${withval}
  ],[
    with_static_logging_stats_plugin=no
])
AS_IF([test "x${with_static_logging_stats_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_logging_stats_plugin=no
  ],[
  shared_logging_stats_plugin=yes
])
AC_ARG_ENABLE([logging-stats-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-logging-stats-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-logging-stats-plugin],[Disable loading  by default.])
  ],
  [enable_logging_stats_plugin="$enableval"],
  [enable_logging_stats_plugin=yes])


AM_CONDITIONAL([BUILD_LOGGING_STATS_PLUGIN_STATIC],
               [test "x${with_logging_stats_plugin}" = "xyes" -a ! "x${shared_logging_stats_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_LOGGING_STATS_PLUGIN_SHARED],
               [test "x${with_logging_stats_plugin}" = "xyes" -a "x${shared_logging_stats_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_LOGGING_STATS_PLUGIN],
               [test "x${with_logging_stats_plugin}" = "xyes"])
    
AS_IF([test "x$with_logging_stats_plugin" = "xyes"],[

      pandora_plugin_test_list="logging_stats,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_logging_stats_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_logging_stats_plugin" = "xyes"],[
          pandora_builtin_load_list="logging_stats,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_logging_stats_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="logging_stats,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_logging_stats_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/liblogging_stats_plugin.la"
     ],[
        AS_IF([test "x$enable_logging_stats_plugin" = "xyes"],[
          pandora_default_plugin_list="logging_stats,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([math-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-math-functions-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-math-functions-plugin],[Disable building ])
  ],[
    with_math_functions_plugin="$withval"
    AS_IF([test "x$with_math_functions_plugin" = "xyes"],[
      requested_math_functions_plugin="yes"
    ],[
      requested_math_functions_plugin="no"
    ])
  ],[
    with_math_functions_plugin="yes"
    requested_math_functions_plugin="no"
  ])
AC_ARG_WITH([static-math-functions-plugin],[
AS_HELP_STRING([--with-static-math-functions-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-math-functions-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_math_functions_plugin=${withval}
  ],[
    with_static_math_functions_plugin=yes
])
AS_IF([test "x${with_static_math_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_math_functions_plugin=no
  ],[
  shared_math_functions_plugin=yes
])
AC_ARG_ENABLE([math-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-math-functions-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-math-functions-plugin],[Disable loading  by default.])
  ],
  [enable_math_functions_plugin="$enableval"],
  [enable_math_functions_plugin=yes])


AM_CONDITIONAL([BUILD_MATH_FUNCTIONS_PLUGIN_STATIC],
               [test "x${with_math_functions_plugin}" = "xyes" -a ! "x${shared_math_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MATH_FUNCTIONS_PLUGIN_SHARED],
               [test "x${with_math_functions_plugin}" = "xyes" -a "x${shared_math_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MATH_FUNCTIONS_PLUGIN],
               [test "x${with_math_functions_plugin}" = "xyes"])
    
AS_IF([test "x$with_math_functions_plugin" = "xyes"],[

      AS_IF([test "x${with_static_math_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_math_functions_plugin" = "xyes"],[
          pandora_builtin_load_list="math_functions,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_math_functions_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="math_functions,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_math_functions_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libmath_functions_plugin.la"
     ],[
        AS_IF([test "x$enable_math_functions_plugin" = "xyes"],[
          pandora_default_plugin_list="math_functions,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([md5-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-md5-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-md5-plugin],[Disable building ])
  ],[
    with_md5_plugin="$withval"
    AS_IF([test "x$with_md5_plugin" = "xyes"],[
      requested_md5_plugin="yes"
    ],[
      requested_md5_plugin="no"
    ])
  ],[
    with_md5_plugin="yes"
    requested_md5_plugin="no"
  ])
AC_ARG_WITH([static-md5-plugin],[
AS_HELP_STRING([--with-static-md5-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-md5-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_md5_plugin=${withval}
  ],[
    with_static_md5_plugin=no
])
AS_IF([test "x${with_static_md5_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_md5_plugin=no
  ],[
  shared_md5_plugin=yes
])
AC_ARG_ENABLE([md5-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-md5-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-md5-plugin],[Disable loading  by default.])
  ],
  [enable_md5_plugin="$enableval"],
  [enable_md5_plugin=yes])

m4_sinclude([plugin/md5/plugin.ac])

AS_IF([test "x${with_md5_plugin}" = "xyes" -a "${ac_cv_libgcrypt}" = "yes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_md5_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin md5 was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_md5_plugin=no
      ])


AM_CONDITIONAL([BUILD_MD5_PLUGIN_STATIC],
               [test "x${with_md5_plugin}" = "xyes" -a "${ac_cv_libgcrypt}" = "yes" -a ! "x${shared_md5_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MD5_PLUGIN_SHARED],
               [test "x${with_md5_plugin}" = "xyes" -a "${ac_cv_libgcrypt}" = "yes" -a "x${shared_md5_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MD5_PLUGIN],
               [test "x${with_md5_plugin}" = "xyes" -a "${ac_cv_libgcrypt}" = "yes"])
    
AS_IF([test "x$with_md5_plugin" = "xyes"],[

      pandora_plugin_test_list="md5,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_md5_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_md5_plugin" = "xyes"],[
          pandora_builtin_load_list="md5,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_md5_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="md5,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_md5_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libmd5_plugin.la"
     ],[
        AS_IF([test "x$enable_md5_plugin" = "xyes"],[
          pandora_default_plugin_list="md5,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([memcached-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-memcached-functions-plugin],[Build . @<:@default=no@:>@])
AS_HELP_STRING([--without-memcached-functions-plugin],[Disable building ])
  ],[
    with_memcached_functions_plugin="$withval"
    AS_IF([test "x$with_memcached_functions_plugin" = "xyes"],[
      requested_memcached_functions_plugin="yes"
    ],[
      requested_memcached_functions_plugin="no"
    ])
  ],[
    with_memcached_functions_plugin="no"
    requested_memcached_functions_plugin="no"
  ])
AC_ARG_WITH([static-memcached-functions-plugin],[
AS_HELP_STRING([--with-static-memcached-functions-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-memcached-functions-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_memcached_functions_plugin=${withval}
  ],[
    with_static_memcached_functions_plugin=no
])
AS_IF([test "x${with_static_memcached_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_memcached_functions_plugin=no
  ],[
  shared_memcached_functions_plugin=yes
])
AC_ARG_ENABLE([memcached-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-memcached-functions-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-memcached-functions-plugin],[Disable loading  by default.])
  ],
  [enable_memcached_functions_plugin="$enableval"],
  [enable_memcached_functions_plugin=no])

m4_sinclude([plugin/memcached_functions/plugin.ac])

AS_IF([test "x${with_memcached_functions_plugin}" = "xyes" -a "${pandora_cv_recent_libmemcached}" = "yes" -a "x${MEMCACHED_BINARY}" != "xno"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_memcached_functions_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin memcached_functions was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_memcached_functions_plugin=no
      ])


AM_CONDITIONAL([BUILD_MEMCACHED_FUNCTIONS_PLUGIN_STATIC],
               [test "x${with_memcached_functions_plugin}" = "xyes" -a "${pandora_cv_recent_libmemcached}" = "yes" -a "x${MEMCACHED_BINARY}" != "xno" -a ! "x${shared_memcached_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MEMCACHED_FUNCTIONS_PLUGIN_SHARED],
               [test "x${with_memcached_functions_plugin}" = "xyes" -a "${pandora_cv_recent_libmemcached}" = "yes" -a "x${MEMCACHED_BINARY}" != "xno" -a "x${shared_memcached_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MEMCACHED_FUNCTIONS_PLUGIN],
               [test "x${with_memcached_functions_plugin}" = "xyes" -a "${pandora_cv_recent_libmemcached}" = "yes" -a "x${MEMCACHED_BINARY}" != "xno"])
    
AS_IF([test "x$with_memcached_functions_plugin" = "xyes"],[

      pandora_plugin_test_list="memcached_functions,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_memcached_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_memcached_functions_plugin" = "xyes"],[
          pandora_builtin_load_list="memcached_functions,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_memcached_functions_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="memcached_functions,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_memcached_functions_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libmemcached_functions_plugin.la"
     ],[
        AS_IF([test "x$enable_memcached_functions_plugin" = "xyes"],[
          pandora_default_plugin_list="memcached_functions,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([memcached-stats-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-memcached-stats-plugin],[Build . @<:@default=no@:>@])
AS_HELP_STRING([--without-memcached-stats-plugin],[Disable building ])
  ],[
    with_memcached_stats_plugin="$withval"
    AS_IF([test "x$with_memcached_stats_plugin" = "xyes"],[
      requested_memcached_stats_plugin="yes"
    ],[
      requested_memcached_stats_plugin="no"
    ])
  ],[
    with_memcached_stats_plugin="no"
    requested_memcached_stats_plugin="no"
  ])
AC_ARG_WITH([static-memcached-stats-plugin],[
AS_HELP_STRING([--with-static-memcached-stats-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-memcached-stats-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_memcached_stats_plugin=${withval}
  ],[
    with_static_memcached_stats_plugin=no
])
AS_IF([test "x${with_static_memcached_stats_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_memcached_stats_plugin=no
  ],[
  shared_memcached_stats_plugin=yes
])
AC_ARG_ENABLE([memcached-stats-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-memcached-stats-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-memcached-stats-plugin],[Disable loading  by default.])
  ],
  [enable_memcached_stats_plugin="$enableval"],
  [enable_memcached_stats_plugin=no])

m4_sinclude([plugin/memcached_stats/plugin.ac])

AS_IF([test "x${with_memcached_stats_plugin}" = "xyes" -a "${pandora_cv_recent_libmemcached}" = "yes" -a "x${MEMCACHED_BINARY}" != "xno"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_memcached_stats_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin memcached_stats was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_memcached_stats_plugin=no
      ])


AM_CONDITIONAL([BUILD_MEMCACHED_STATS_PLUGIN_STATIC],
               [test "x${with_memcached_stats_plugin}" = "xyes" -a "${pandora_cv_recent_libmemcached}" = "yes" -a "x${MEMCACHED_BINARY}" != "xno" -a ! "x${shared_memcached_stats_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MEMCACHED_STATS_PLUGIN_SHARED],
               [test "x${with_memcached_stats_plugin}" = "xyes" -a "${pandora_cv_recent_libmemcached}" = "yes" -a "x${MEMCACHED_BINARY}" != "xno" -a "x${shared_memcached_stats_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MEMCACHED_STATS_PLUGIN],
               [test "x${with_memcached_stats_plugin}" = "xyes" -a "${pandora_cv_recent_libmemcached}" = "yes" -a "x${MEMCACHED_BINARY}" != "xno"])
    
AS_IF([test "x$with_memcached_stats_plugin" = "xyes"],[

      pandora_plugin_test_list="memcached_stats,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_memcached_stats_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_memcached_stats_plugin" = "xyes"],[
          pandora_builtin_load_list="memcached_stats,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_memcached_stats_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="memcached_stats,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_memcached_stats_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libmemcached_stats_plugin.la"
     ],[
        AS_IF([test "x$enable_memcached_stats_plugin" = "xyes"],[
          pandora_default_plugin_list="memcached_stats,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([memory-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-memory-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-memory-plugin],[Disable building ])
  ],[
    with_memory_plugin="$withval"
    AS_IF([test "x$with_memory_plugin" = "xyes"],[
      requested_memory_plugin="yes"
    ],[
      requested_memory_plugin="no"
    ])
  ],[
    with_memory_plugin="yes"
    requested_memory_plugin="no"
  ])
AC_ARG_WITH([static-memory-plugin],[
AS_HELP_STRING([--with-static-memory-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-memory-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_memory_plugin=${withval}
  ],[
    with_static_memory_plugin=yes
])
AS_IF([test "x${with_static_memory_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_memory_plugin=no
  ],[
  shared_memory_plugin=yes
])
AC_ARG_ENABLE([memory-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-memory-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-memory-plugin],[Disable loading  by default.])
  ],
  [enable_memory_plugin="$enableval"],
  [enable_memory_plugin=yes])


AM_CONDITIONAL([BUILD_MEMORY_PLUGIN_STATIC],
               [test "x${with_memory_plugin}" = "xyes" -a ! "x${shared_memory_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MEMORY_PLUGIN_SHARED],
               [test "x${with_memory_plugin}" = "xyes" -a "x${shared_memory_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MEMORY_PLUGIN],
               [test "x${with_memory_plugin}" = "xyes"])
    
AS_IF([test "x$with_memory_plugin" = "xyes"],[

      pandora_plugin_test_list="memory,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_memory_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_memory_plugin" = "xyes"],[
          pandora_builtin_load_list="memory,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_memory_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} \${top_builddir}/plugin/memory/libheap.la"
        ])
        pandora_builtin_list="memory,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_memory_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libmemory_plugin.la"
     ],[
        AS_IF([test "x$enable_memory_plugin" = "xyes"],[
          pandora_default_plugin_list="memory,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([multi-thread-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-multi-thread-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-multi-thread-plugin],[Disable building ])
  ],[
    with_multi_thread_plugin="$withval"
    AS_IF([test "x$with_multi_thread_plugin" = "xyes"],[
      requested_multi_thread_plugin="yes"
    ],[
      requested_multi_thread_plugin="no"
    ])
  ],[
    with_multi_thread_plugin="yes"
    requested_multi_thread_plugin="no"
  ])
AC_ARG_WITH([static-multi-thread-plugin],[
AS_HELP_STRING([--with-static-multi-thread-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-multi-thread-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_multi_thread_plugin=${withval}
  ],[
    with_static_multi_thread_plugin=no
])
AS_IF([test "x${with_static_multi_thread_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_multi_thread_plugin=no
  ],[
  shared_multi_thread_plugin=yes
])
AC_ARG_ENABLE([multi-thread-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-multi-thread-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-multi-thread-plugin],[Disable loading  by default.])
  ],
  [enable_multi_thread_plugin="$enableval"],
  [enable_multi_thread_plugin=yes])


AM_CONDITIONAL([BUILD_MULTI_THREAD_PLUGIN_STATIC],
               [test "x${with_multi_thread_plugin}" = "xyes" -a ! "x${shared_multi_thread_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MULTI_THREAD_PLUGIN_SHARED],
               [test "x${with_multi_thread_plugin}" = "xyes" -a "x${shared_multi_thread_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MULTI_THREAD_PLUGIN],
               [test "x${with_multi_thread_plugin}" = "xyes"])
    
AS_IF([test "x$with_multi_thread_plugin" = "xyes"],[

      AS_IF([test "x${with_static_multi_thread_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_multi_thread_plugin" = "xyes"],[
          pandora_builtin_load_list="multi_thread,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_multi_thread_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="multi_thread,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_multi_thread_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libmulti_thread_plugin.la"
     ],[
        AS_IF([test "x$enable_multi_thread_plugin" = "xyes"],[
          pandora_default_plugin_list="multi_thread,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([myisam-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-myisam-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-myisam-plugin],[Disable building ])
  ],[
    with_myisam_plugin="$withval"
    AS_IF([test "x$with_myisam_plugin" = "xyes"],[
      requested_myisam_plugin="yes"
    ],[
      requested_myisam_plugin="no"
    ])
  ],[
    with_myisam_plugin="yes"
    requested_myisam_plugin="no"
  ])
AC_ARG_WITH([static-myisam-plugin],[
AS_HELP_STRING([--with-static-myisam-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-myisam-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_myisam_plugin=${withval}
  ],[
    with_static_myisam_plugin=yes
])
AS_IF([test "x${with_static_myisam_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_myisam_plugin=no
  ],[
  shared_myisam_plugin=yes
])
AC_ARG_ENABLE([myisam-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-myisam-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-myisam-plugin],[Disable loading  by default.])
  ],
  [enable_myisam_plugin="$enableval"],
  [enable_myisam_plugin=yes])


AM_CONDITIONAL([BUILD_MYISAM_PLUGIN_STATIC],
               [test "x${with_myisam_plugin}" = "xyes" -a ! "x${shared_myisam_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MYISAM_PLUGIN_SHARED],
               [test "x${with_myisam_plugin}" = "xyes" -a "x${shared_myisam_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MYISAM_PLUGIN],
               [test "x${with_myisam_plugin}" = "xyes"])
    
AS_IF([test "x$with_myisam_plugin" = "xyes"],[

      pandora_plugin_test_list="myisam,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_myisam_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_myisam_plugin" = "xyes"],[
          pandora_builtin_load_list="myisam,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_myisam_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} \${top_builddir}/plugin/myisam/libmyisam.la \${top_builddir}/drizzled/internal/libinternal.la"
        ])
        pandora_builtin_list="myisam,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_myisam_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libmyisam_plugin.la"
     ],[
        AS_IF([test "x$enable_myisam_plugin" = "xyes"],[
          pandora_default_plugin_list="myisam,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([mysql-protocol-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-mysql-protocol-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-mysql-protocol-plugin],[Disable building ])
  ],[
    with_mysql_protocol_plugin="$withval"
    AS_IF([test "x$with_mysql_protocol_plugin" = "xyes"],[
      requested_mysql_protocol_plugin="yes"
    ],[
      requested_mysql_protocol_plugin="no"
    ])
  ],[
    with_mysql_protocol_plugin="yes"
    requested_mysql_protocol_plugin="no"
  ])
AC_ARG_WITH([static-mysql-protocol-plugin],[
AS_HELP_STRING([--with-static-mysql-protocol-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-mysql-protocol-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_mysql_protocol_plugin=${withval}
  ],[
    with_static_mysql_protocol_plugin=yes
])
AS_IF([test "x${with_static_mysql_protocol_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_mysql_protocol_plugin=no
  ],[
  shared_mysql_protocol_plugin=yes
])
AC_ARG_ENABLE([mysql-protocol-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-mysql-protocol-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-mysql-protocol-plugin],[Disable loading  by default.])
  ],
  [enable_mysql_protocol_plugin="$enableval"],
  [enable_mysql_protocol_plugin=yes])


AM_CONDITIONAL([BUILD_MYSQL_PROTOCOL_PLUGIN_STATIC],
               [test "x${with_mysql_protocol_plugin}" = "xyes" -a ! "x${shared_mysql_protocol_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MYSQL_PROTOCOL_PLUGIN_SHARED],
               [test "x${with_mysql_protocol_plugin}" = "xyes" -a "x${shared_mysql_protocol_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MYSQL_PROTOCOL_PLUGIN],
               [test "x${with_mysql_protocol_plugin}" = "xyes"])
    
AS_IF([test "x$with_mysql_protocol_plugin" = "xyes"],[

      pandora_plugin_test_list="mysql_protocol,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_mysql_protocol_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_mysql_protocol_plugin" = "xyes"],[
          pandora_builtin_load_list="mysql_protocol,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_mysql_protocol_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} \${top_builddir}/drizzled/algorithm/libhash.la"
        ])
        pandora_builtin_list="mysql_protocol,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_mysql_protocol_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libmysql_protocol_plugin.la"
     ],[
        AS_IF([test "x$enable_mysql_protocol_plugin" = "xyes"],[
          pandora_default_plugin_list="mysql_protocol,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([mysql-unix-socket-protocol-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-mysql-unix-socket-protocol-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-mysql-unix-socket-protocol-plugin],[Disable building ])
  ],[
    with_mysql_unix_socket_protocol_plugin="$withval"
    AS_IF([test "x$with_mysql_unix_socket_protocol_plugin" = "xyes"],[
      requested_mysql_unix_socket_protocol_plugin="yes"
    ],[
      requested_mysql_unix_socket_protocol_plugin="no"
    ])
  ],[
    with_mysql_unix_socket_protocol_plugin="yes"
    requested_mysql_unix_socket_protocol_plugin="no"
  ])
AC_ARG_WITH([static-mysql-unix-socket-protocol-plugin],[
AS_HELP_STRING([--with-static-mysql-unix-socket-protocol-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-mysql-unix-socket-protocol-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_mysql_unix_socket_protocol_plugin=${withval}
  ],[
    with_static_mysql_unix_socket_protocol_plugin=yes
])
AS_IF([test "x${with_static_mysql_unix_socket_protocol_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_mysql_unix_socket_protocol_plugin=no
  ],[
  shared_mysql_unix_socket_protocol_plugin=yes
])
AC_ARG_ENABLE([mysql-unix-socket-protocol-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-mysql-unix-socket-protocol-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-mysql-unix-socket-protocol-plugin],[Disable loading  by default.])
  ],
  [enable_mysql_unix_socket_protocol_plugin="$enableval"],
  [enable_mysql_unix_socket_protocol_plugin=yes])


AM_CONDITIONAL([BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN_STATIC],
               [test "x${with_mysql_unix_socket_protocol_plugin}" = "xyes" -a ! "x${shared_mysql_unix_socket_protocol_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN_SHARED],
               [test "x${with_mysql_unix_socket_protocol_plugin}" = "xyes" -a "x${shared_mysql_unix_socket_protocol_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN],
               [test "x${with_mysql_unix_socket_protocol_plugin}" = "xyes"])
    
AS_IF([test "x$with_mysql_unix_socket_protocol_plugin" = "xyes"],[

      AS_IF([test "x${with_static_mysql_unix_socket_protocol_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_mysql_unix_socket_protocol_plugin" = "xyes"],[
          pandora_builtin_load_list="mysql_unix_socket_protocol,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_mysql_unix_socket_protocol_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} \${top_builddir}/drizzled/algorithm/libhash.la"
        ])
        pandora_builtin_list="mysql_unix_socket_protocol,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_mysql_unix_socket_protocol_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libmysql_unix_socket_protocol_plugin.la"
     ],[
        AS_IF([test "x$enable_mysql_unix_socket_protocol_plugin" = "xyes"],[
          pandora_default_plugin_list="mysql_unix_socket_protocol,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([performance-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-performance-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-performance-dictionary-plugin],[Disable building ])
  ],[
    with_performance_dictionary_plugin="$withval"
    AS_IF([test "x$with_performance_dictionary_plugin" = "xyes"],[
      requested_performance_dictionary_plugin="yes"
    ],[
      requested_performance_dictionary_plugin="no"
    ])
  ],[
    with_performance_dictionary_plugin="yes"
    requested_performance_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-performance-dictionary-plugin],[
AS_HELP_STRING([--with-static-performance-dictionary-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-performance-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_performance_dictionary_plugin=${withval}
  ],[
    with_static_performance_dictionary_plugin=no
])
AS_IF([test "x${with_static_performance_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_performance_dictionary_plugin=no
  ],[
  shared_performance_dictionary_plugin=yes
])
AC_ARG_ENABLE([performance-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-performance-dictionary-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-performance-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_performance_dictionary_plugin="$enableval"],
  [enable_performance_dictionary_plugin=no])


AM_CONDITIONAL([BUILD_PERFORMANCE_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_performance_dictionary_plugin}" = "xyes" -a ! "x${shared_performance_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_PERFORMANCE_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_performance_dictionary_plugin}" = "xyes" -a "x${shared_performance_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_PERFORMANCE_DICTIONARY_PLUGIN],
               [test "x${with_performance_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_performance_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="performance_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_performance_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_performance_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="performance_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_performance_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="performance_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_performance_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libperformance_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_performance_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="performance_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([protocol-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-protocol-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-protocol-dictionary-plugin],[Disable building ])
  ],[
    with_protocol_dictionary_plugin="$withval"
    AS_IF([test "x$with_protocol_dictionary_plugin" = "xyes"],[
      requested_protocol_dictionary_plugin="yes"
    ],[
      requested_protocol_dictionary_plugin="no"
    ])
  ],[
    with_protocol_dictionary_plugin="yes"
    requested_protocol_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-protocol-dictionary-plugin],[
AS_HELP_STRING([--with-static-protocol-dictionary-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-protocol-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_protocol_dictionary_plugin=${withval}
  ],[
    with_static_protocol_dictionary_plugin=yes
])
AS_IF([test "x${with_static_protocol_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_protocol_dictionary_plugin=no
  ],[
  shared_protocol_dictionary_plugin=yes
])
AC_ARG_ENABLE([protocol-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-protocol-dictionary-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-protocol-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_protocol_dictionary_plugin="$enableval"],
  [enable_protocol_dictionary_plugin=yes])


AM_CONDITIONAL([BUILD_PROTOCOL_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_protocol_dictionary_plugin}" = "xyes" -a ! "x${shared_protocol_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_PROTOCOL_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_protocol_dictionary_plugin}" = "xyes" -a "x${shared_protocol_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_PROTOCOL_DICTIONARY_PLUGIN],
               [test "x${with_protocol_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_protocol_dictionary_plugin" = "xyes"],[

      AS_IF([test "x${with_static_protocol_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_protocol_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="protocol_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_protocol_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="protocol_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_protocol_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libprotocol_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_protocol_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="protocol_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([query-log-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-query-log-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-query-log-plugin],[Disable building ])
  ],[
    with_query_log_plugin="$withval"
    AS_IF([test "x$with_query_log_plugin" = "xyes"],[
      requested_query_log_plugin="yes"
    ],[
      requested_query_log_plugin="no"
    ])
  ],[
    with_query_log_plugin="yes"
    requested_query_log_plugin="no"
  ])
AC_ARG_WITH([static-query-log-plugin],[
AS_HELP_STRING([--with-static-query-log-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-query-log-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_query_log_plugin=${withval}
  ],[
    with_static_query_log_plugin=no
])
AS_IF([test "x${with_static_query_log_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_query_log_plugin=no
  ],[
  shared_query_log_plugin=yes
])
AC_ARG_ENABLE([query-log-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-query-log-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-query-log-plugin],[Disable loading  by default.])
  ],
  [enable_query_log_plugin="$enableval"],
  [enable_query_log_plugin=no])


AM_CONDITIONAL([BUILD_QUERY_LOG_PLUGIN_STATIC],
               [test "x${with_query_log_plugin}" = "xyes" -a ! "x${shared_query_log_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_QUERY_LOG_PLUGIN_SHARED],
               [test "x${with_query_log_plugin}" = "xyes" -a "x${shared_query_log_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_QUERY_LOG_PLUGIN],
               [test "x${with_query_log_plugin}" = "xyes"])
    
AS_IF([test "x$with_query_log_plugin" = "xyes"],[

      pandora_plugin_test_list="query_log,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_query_log_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_query_log_plugin" = "xyes"],[
          pandora_builtin_load_list="query_log,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_query_log_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="query_log,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_query_log_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libquery_log_plugin.la"
     ],[
        AS_IF([test "x$enable_query_log_plugin" = "xyes"],[
          pandora_default_plugin_list="query_log,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([rabbitmq-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-rabbitmq-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-rabbitmq-plugin],[Disable building ])
  ],[
    with_rabbitmq_plugin="$withval"
    AS_IF([test "x$with_rabbitmq_plugin" = "xyes"],[
      requested_rabbitmq_plugin="yes"
    ],[
      requested_rabbitmq_plugin="no"
    ])
  ],[
    with_rabbitmq_plugin="yes"
    requested_rabbitmq_plugin="no"
  ])
AC_ARG_WITH([static-rabbitmq-plugin],[
AS_HELP_STRING([--with-static-rabbitmq-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-rabbitmq-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_rabbitmq_plugin=${withval}
  ],[
    with_static_rabbitmq_plugin=no
])
AS_IF([test "x${with_static_rabbitmq_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_rabbitmq_plugin=no
  ],[
  shared_rabbitmq_plugin=yes
])
AC_ARG_ENABLE([rabbitmq-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-rabbitmq-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-rabbitmq-plugin],[Disable loading  by default.])
  ],
  [enable_rabbitmq_plugin="$enableval"],
  [enable_rabbitmq_plugin=no])

m4_sinclude([plugin/rabbitmq/plugin.ac])

AS_IF([test "x${with_rabbitmq_plugin}" = "xyes" -a "$ac_cv_librabbitmq" = "yes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_rabbitmq_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin rabbitmq was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_rabbitmq_plugin=no
      ])


AM_CONDITIONAL([BUILD_RABBITMQ_PLUGIN_STATIC],
               [test "x${with_rabbitmq_plugin}" = "xyes" -a "$ac_cv_librabbitmq" = "yes" -a ! "x${shared_rabbitmq_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_RABBITMQ_PLUGIN_SHARED],
               [test "x${with_rabbitmq_plugin}" = "xyes" -a "$ac_cv_librabbitmq" = "yes" -a "x${shared_rabbitmq_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_RABBITMQ_PLUGIN],
               [test "x${with_rabbitmq_plugin}" = "xyes" -a "$ac_cv_librabbitmq" = "yes"])
    
AS_IF([test "x$with_rabbitmq_plugin" = "xyes"],[

      pandora_plugin_test_list="rabbitmq,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_rabbitmq_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_rabbitmq_plugin" = "xyes"],[
          pandora_builtin_load_list="rabbitmq,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_rabbitmq_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="rabbitmq,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_rabbitmq_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/librabbitmq_plugin.la"
     ],[
        AS_IF([test "x$enable_rabbitmq_plugin" = "xyes"],[
          pandora_default_plugin_list="rabbitmq,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([rand-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-rand-function-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-rand-function-plugin],[Disable building ])
  ],[
    with_rand_function_plugin="$withval"
    AS_IF([test "x$with_rand_function_plugin" = "xyes"],[
      requested_rand_function_plugin="yes"
    ],[
      requested_rand_function_plugin="no"
    ])
  ],[
    with_rand_function_plugin="yes"
    requested_rand_function_plugin="no"
  ])
AC_ARG_WITH([static-rand-function-plugin],[
AS_HELP_STRING([--with-static-rand-function-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-rand-function-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_rand_function_plugin=${withval}
  ],[
    with_static_rand_function_plugin=no
])
AS_IF([test "x${with_static_rand_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_rand_function_plugin=no
  ],[
  shared_rand_function_plugin=yes
])
AC_ARG_ENABLE([rand-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-rand-function-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-rand-function-plugin],[Disable loading  by default.])
  ],
  [enable_rand_function_plugin="$enableval"],
  [enable_rand_function_plugin=yes])


AM_CONDITIONAL([BUILD_RAND_FUNCTION_PLUGIN_STATIC],
               [test "x${with_rand_function_plugin}" = "xyes" -a ! "x${shared_rand_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_RAND_FUNCTION_PLUGIN_SHARED],
               [test "x${with_rand_function_plugin}" = "xyes" -a "x${shared_rand_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_RAND_FUNCTION_PLUGIN],
               [test "x${with_rand_function_plugin}" = "xyes"])
    
AS_IF([test "x$with_rand_function_plugin" = "xyes"],[

      pandora_plugin_test_list="rand_function,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_rand_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_rand_function_plugin" = "xyes"],[
          pandora_builtin_load_list="rand_function,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_rand_function_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="rand_function,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_rand_function_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/librand_function_plugin.la"
     ],[
        AS_IF([test "x$enable_rand_function_plugin" = "xyes"],[
          pandora_default_plugin_list="rand_function,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([regex-policy-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-regex-policy-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-regex-policy-plugin],[Disable building ])
  ],[
    with_regex_policy_plugin="$withval"
    AS_IF([test "x$with_regex_policy_plugin" = "xyes"],[
      requested_regex_policy_plugin="yes"
    ],[
      requested_regex_policy_plugin="no"
    ])
  ],[
    with_regex_policy_plugin="yes"
    requested_regex_policy_plugin="no"
  ])
AC_ARG_WITH([static-regex-policy-plugin],[
AS_HELP_STRING([--with-static-regex-policy-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-regex-policy-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_regex_policy_plugin=${withval}
  ],[
    with_static_regex_policy_plugin=no
])
AS_IF([test "x${with_static_regex_policy_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_regex_policy_plugin=no
  ],[
  shared_regex_policy_plugin=yes
])
AC_ARG_ENABLE([regex-policy-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-regex-policy-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-regex-policy-plugin],[Disable loading  by default.])
  ],
  [enable_regex_policy_plugin="$enableval"],
  [enable_regex_policy_plugin=no])


AM_CONDITIONAL([BUILD_REGEX_POLICY_PLUGIN_STATIC],
               [test "x${with_regex_policy_plugin}" = "xyes" -a ! "x${shared_regex_policy_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_REGEX_POLICY_PLUGIN_SHARED],
               [test "x${with_regex_policy_plugin}" = "xyes" -a "x${shared_regex_policy_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_REGEX_POLICY_PLUGIN],
               [test "x${with_regex_policy_plugin}" = "xyes"])
    
AS_IF([test "x$with_regex_policy_plugin" = "xyes"],[

      pandora_plugin_test_list="regex_policy,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_regex_policy_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_regex_policy_plugin" = "xyes"],[
          pandora_builtin_load_list="regex_policy,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_regex_policy_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="regex_policy,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_regex_policy_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libregex_policy_plugin.la"
     ],[
        AS_IF([test "x$enable_regex_policy_plugin" = "xyes"],[
          pandora_default_plugin_list="regex_policy,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([registry-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-registry-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-registry-dictionary-plugin],[Disable building ])
  ],[
    with_registry_dictionary_plugin="$withval"
    AS_IF([test "x$with_registry_dictionary_plugin" = "xyes"],[
      requested_registry_dictionary_plugin="yes"
    ],[
      requested_registry_dictionary_plugin="no"
    ])
  ],[
    with_registry_dictionary_plugin="yes"
    requested_registry_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-registry-dictionary-plugin],[
AS_HELP_STRING([--with-static-registry-dictionary-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-registry-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_registry_dictionary_plugin=${withval}
  ],[
    with_static_registry_dictionary_plugin=yes
])
AS_IF([test "x${with_static_registry_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_registry_dictionary_plugin=no
  ],[
  shared_registry_dictionary_plugin=yes
])
AC_ARG_ENABLE([registry-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-registry-dictionary-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-registry-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_registry_dictionary_plugin="$enableval"],
  [enable_registry_dictionary_plugin=yes])


AM_CONDITIONAL([BUILD_REGISTRY_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_registry_dictionary_plugin}" = "xyes" -a ! "x${shared_registry_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_REGISTRY_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_registry_dictionary_plugin}" = "xyes" -a "x${shared_registry_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_REGISTRY_DICTIONARY_PLUGIN],
               [test "x${with_registry_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_registry_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="registry_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_registry_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_registry_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="registry_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_registry_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="registry_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_registry_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libregistry_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_registry_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="registry_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([reverse-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-reverse-function-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-reverse-function-plugin],[Disable building ])
  ],[
    with_reverse_function_plugin="$withval"
    AS_IF([test "x$with_reverse_function_plugin" = "xyes"],[
      requested_reverse_function_plugin="yes"
    ],[
      requested_reverse_function_plugin="no"
    ])
  ],[
    with_reverse_function_plugin="yes"
    requested_reverse_function_plugin="no"
  ])
AC_ARG_WITH([static-reverse-function-plugin],[
AS_HELP_STRING([--with-static-reverse-function-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-reverse-function-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_reverse_function_plugin=${withval}
  ],[
    with_static_reverse_function_plugin=no
])
AS_IF([test "x${with_static_reverse_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_reverse_function_plugin=no
  ],[
  shared_reverse_function_plugin=yes
])
AC_ARG_ENABLE([reverse-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-reverse-function-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-reverse-function-plugin],[Disable loading  by default.])
  ],
  [enable_reverse_function_plugin="$enableval"],
  [enable_reverse_function_plugin=yes])


AM_CONDITIONAL([BUILD_REVERSE_FUNCTION_PLUGIN_STATIC],
               [test "x${with_reverse_function_plugin}" = "xyes" -a ! "x${shared_reverse_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_REVERSE_FUNCTION_PLUGIN_SHARED],
               [test "x${with_reverse_function_plugin}" = "xyes" -a "x${shared_reverse_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_REVERSE_FUNCTION_PLUGIN],
               [test "x${with_reverse_function_plugin}" = "xyes"])
    
AS_IF([test "x$with_reverse_function_plugin" = "xyes"],[

      AS_IF([test "x${with_static_reverse_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_reverse_function_plugin" = "xyes"],[
          pandora_builtin_load_list="reverse_function,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_reverse_function_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="reverse_function,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_reverse_function_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libreverse_function_plugin.la"
     ],[
        AS_IF([test "x$enable_reverse_function_plugin" = "xyes"],[
          pandora_default_plugin_list="reverse_function,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([schema-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-schema-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-schema-dictionary-plugin],[Disable building ])
  ],[
    with_schema_dictionary_plugin="$withval"
    AS_IF([test "x$with_schema_dictionary_plugin" = "xyes"],[
      requested_schema_dictionary_plugin="yes"
    ],[
      requested_schema_dictionary_plugin="no"
    ])
  ],[
    with_schema_dictionary_plugin="yes"
    requested_schema_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-schema-dictionary-plugin],[
AS_HELP_STRING([--with-static-schema-dictionary-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-schema-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_schema_dictionary_plugin=${withval}
  ],[
    with_static_schema_dictionary_plugin=yes
])
AS_IF([test "x${with_static_schema_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_schema_dictionary_plugin=no
  ],[
  shared_schema_dictionary_plugin=yes
])
AC_ARG_ENABLE([schema-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-schema-dictionary-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-schema-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_schema_dictionary_plugin="$enableval"],
  [enable_schema_dictionary_plugin=yes])


AM_CONDITIONAL([BUILD_SCHEMA_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_schema_dictionary_plugin}" = "xyes" -a ! "x${shared_schema_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SCHEMA_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_schema_dictionary_plugin}" = "xyes" -a "x${shared_schema_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SCHEMA_DICTIONARY_PLUGIN],
               [test "x${with_schema_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_schema_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="schema_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_schema_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_schema_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="schema_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_schema_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="schema_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_schema_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libschema_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_schema_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="schema_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([schema-engine-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-schema-engine-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-schema-engine-plugin],[Disable building ])
  ],[
    with_schema_engine_plugin="$withval"
    AS_IF([test "x$with_schema_engine_plugin" = "xyes"],[
      requested_schema_engine_plugin="yes"
    ],[
      requested_schema_engine_plugin="no"
    ])
  ],[
    with_schema_engine_plugin="yes"
    requested_schema_engine_plugin="no"
  ])
AC_ARG_WITH([static-schema-engine-plugin],[
AS_HELP_STRING([--with-static-schema-engine-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-schema-engine-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_schema_engine_plugin=${withval}
  ],[
    with_static_schema_engine_plugin=yes
])
AS_IF([test "x${with_static_schema_engine_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_schema_engine_plugin=no
  ],[
  shared_schema_engine_plugin=yes
])
AC_ARG_ENABLE([schema-engine-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-schema-engine-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-schema-engine-plugin],[Disable loading  by default.])
  ],
  [enable_schema_engine_plugin="$enableval"],
  [enable_schema_engine_plugin=yes])


AM_CONDITIONAL([BUILD_SCHEMA_ENGINE_PLUGIN_STATIC],
               [test "x${with_schema_engine_plugin}" = "xyes" -a ! "x${shared_schema_engine_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SCHEMA_ENGINE_PLUGIN_SHARED],
               [test "x${with_schema_engine_plugin}" = "xyes" -a "x${shared_schema_engine_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SCHEMA_ENGINE_PLUGIN],
               [test "x${with_schema_engine_plugin}" = "xyes"])
    
AS_IF([test "x$with_schema_engine_plugin" = "xyes"],[

      pandora_plugin_test_list="schema_engine,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_schema_engine_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_schema_engine_plugin" = "xyes"],[
          pandora_builtin_load_list="schema_engine,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_schema_engine_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="schema_engine,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_schema_engine_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libschema_engine_plugin.la"
     ],[
        AS_IF([test "x$enable_schema_engine_plugin" = "xyes"],[
          pandora_default_plugin_list="schema_engine,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([session-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-session-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-session-dictionary-plugin],[Disable building ])
  ],[
    with_session_dictionary_plugin="$withval"
    AS_IF([test "x$with_session_dictionary_plugin" = "xyes"],[
      requested_session_dictionary_plugin="yes"
    ],[
      requested_session_dictionary_plugin="no"
    ])
  ],[
    with_session_dictionary_plugin="yes"
    requested_session_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-session-dictionary-plugin],[
AS_HELP_STRING([--with-static-session-dictionary-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-session-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_session_dictionary_plugin=${withval}
  ],[
    with_static_session_dictionary_plugin=yes
])
AS_IF([test "x${with_static_session_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_session_dictionary_plugin=no
  ],[
  shared_session_dictionary_plugin=yes
])
AC_ARG_ENABLE([session-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-session-dictionary-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-session-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_session_dictionary_plugin="$enableval"],
  [enable_session_dictionary_plugin=yes])


AM_CONDITIONAL([BUILD_SESSION_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_session_dictionary_plugin}" = "xyes" -a ! "x${shared_session_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SESSION_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_session_dictionary_plugin}" = "xyes" -a "x${shared_session_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SESSION_DICTIONARY_PLUGIN],
               [test "x${with_session_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_session_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="session_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_session_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_session_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="session_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_session_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="session_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_session_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libsession_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_session_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="session_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([show-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-show-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-show-dictionary-plugin],[Disable building ])
  ],[
    with_show_dictionary_plugin="$withval"
    AS_IF([test "x$with_show_dictionary_plugin" = "xyes"],[
      requested_show_dictionary_plugin="yes"
    ],[
      requested_show_dictionary_plugin="no"
    ])
  ],[
    with_show_dictionary_plugin="yes"
    requested_show_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-show-dictionary-plugin],[
AS_HELP_STRING([--with-static-show-dictionary-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-show-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_show_dictionary_plugin=${withval}
  ],[
    with_static_show_dictionary_plugin=yes
])
AS_IF([test "x${with_static_show_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_show_dictionary_plugin=no
  ],[
  shared_show_dictionary_plugin=yes
])
AC_ARG_ENABLE([show-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-show-dictionary-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-show-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_show_dictionary_plugin="$enableval"],
  [enable_show_dictionary_plugin=yes])


AM_CONDITIONAL([BUILD_SHOW_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_show_dictionary_plugin}" = "xyes" -a ! "x${shared_show_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SHOW_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_show_dictionary_plugin}" = "xyes" -a "x${shared_show_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SHOW_DICTIONARY_PLUGIN],
               [test "x${with_show_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_show_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="show_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_show_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_show_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="show_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_show_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="show_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_show_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libshow_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_show_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="show_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([show-schema-proto-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-show-schema-proto-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-show-schema-proto-plugin],[Disable building ])
  ],[
    with_show_schema_proto_plugin="$withval"
    AS_IF([test "x$with_show_schema_proto_plugin" = "xyes"],[
      requested_show_schema_proto_plugin="yes"
    ],[
      requested_show_schema_proto_plugin="no"
    ])
  ],[
    with_show_schema_proto_plugin="yes"
    requested_show_schema_proto_plugin="no"
  ])
AC_ARG_WITH([static-show-schema-proto-plugin],[
AS_HELP_STRING([--with-static-show-schema-proto-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-show-schema-proto-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_show_schema_proto_plugin=${withval}
  ],[
    with_static_show_schema_proto_plugin=no
])
AS_IF([test "x${with_static_show_schema_proto_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_show_schema_proto_plugin=no
  ],[
  shared_show_schema_proto_plugin=yes
])
AC_ARG_ENABLE([show-schema-proto-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-show-schema-proto-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-show-schema-proto-plugin],[Disable loading  by default.])
  ],
  [enable_show_schema_proto_plugin="$enableval"],
  [enable_show_schema_proto_plugin=yes])


AM_CONDITIONAL([BUILD_SHOW_SCHEMA_PROTO_PLUGIN_STATIC],
               [test "x${with_show_schema_proto_plugin}" = "xyes" -a ! "x${shared_show_schema_proto_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SHOW_SCHEMA_PROTO_PLUGIN_SHARED],
               [test "x${with_show_schema_proto_plugin}" = "xyes" -a "x${shared_show_schema_proto_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SHOW_SCHEMA_PROTO_PLUGIN],
               [test "x${with_show_schema_proto_plugin}" = "xyes"])
    
AS_IF([test "x$with_show_schema_proto_plugin" = "xyes"],[

      pandora_plugin_test_list="show_schema_proto,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_show_schema_proto_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_show_schema_proto_plugin" = "xyes"],[
          pandora_builtin_load_list="show_schema_proto,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_show_schema_proto_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="show_schema_proto,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_show_schema_proto_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libshow_schema_proto_plugin.la"
     ],[
        AS_IF([test "x$enable_show_schema_proto_plugin" = "xyes"],[
          pandora_default_plugin_list="show_schema_proto,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([shutdown-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-shutdown-function-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-shutdown-function-plugin],[Disable building ])
  ],[
    with_shutdown_function_plugin="$withval"
    AS_IF([test "x$with_shutdown_function_plugin" = "xyes"],[
      requested_shutdown_function_plugin="yes"
    ],[
      requested_shutdown_function_plugin="no"
    ])
  ],[
    with_shutdown_function_plugin="yes"
    requested_shutdown_function_plugin="no"
  ])
AC_ARG_WITH([static-shutdown-function-plugin],[
AS_HELP_STRING([--with-static-shutdown-function-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-shutdown-function-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_shutdown_function_plugin=${withval}
  ],[
    with_static_shutdown_function_plugin=no
])
AS_IF([test "x${with_static_shutdown_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_shutdown_function_plugin=no
  ],[
  shared_shutdown_function_plugin=yes
])
AC_ARG_ENABLE([shutdown-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-shutdown-function-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-shutdown-function-plugin],[Disable loading  by default.])
  ],
  [enable_shutdown_function_plugin="$enableval"],
  [enable_shutdown_function_plugin=no])


AM_CONDITIONAL([BUILD_SHUTDOWN_FUNCTION_PLUGIN_STATIC],
               [test "x${with_shutdown_function_plugin}" = "xyes" -a ! "x${shared_shutdown_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SHUTDOWN_FUNCTION_PLUGIN_SHARED],
               [test "x${with_shutdown_function_plugin}" = "xyes" -a "x${shared_shutdown_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SHUTDOWN_FUNCTION_PLUGIN],
               [test "x${with_shutdown_function_plugin}" = "xyes"])
    
AS_IF([test "x$with_shutdown_function_plugin" = "xyes"],[

      AS_IF([test "x${with_static_shutdown_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_shutdown_function_plugin" = "xyes"],[
          pandora_builtin_load_list="shutdown_function,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_shutdown_function_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="shutdown_function,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_shutdown_function_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libshutdown_function_plugin.la"
     ],[
        AS_IF([test "x$enable_shutdown_function_plugin" = "xyes"],[
          pandora_default_plugin_list="shutdown_function,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([signal-handler-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-signal-handler-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-signal-handler-plugin],[Disable building ])
  ],[
    with_signal_handler_plugin="$withval"
    AS_IF([test "x$with_signal_handler_plugin" = "xyes"],[
      requested_signal_handler_plugin="yes"
    ],[
      requested_signal_handler_plugin="no"
    ])
  ],[
    with_signal_handler_plugin="yes"
    requested_signal_handler_plugin="no"
  ])
AC_ARG_WITH([static-signal-handler-plugin],[
AS_HELP_STRING([--with-static-signal-handler-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-signal-handler-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_signal_handler_plugin=${withval}
  ],[
    with_static_signal_handler_plugin=yes
])
AS_IF([test "x${with_static_signal_handler_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_signal_handler_plugin=no
  ],[
  shared_signal_handler_plugin=yes
])
AC_ARG_ENABLE([signal-handler-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-signal-handler-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-signal-handler-plugin],[Disable loading  by default.])
  ],
  [enable_signal_handler_plugin="$enableval"],
  [enable_signal_handler_plugin=yes])


AM_CONDITIONAL([BUILD_SIGNAL_HANDLER_PLUGIN_STATIC],
               [test "x${with_signal_handler_plugin}" = "xyes" -a ! "x${shared_signal_handler_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SIGNAL_HANDLER_PLUGIN_SHARED],
               [test "x${with_signal_handler_plugin}" = "xyes" -a "x${shared_signal_handler_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SIGNAL_HANDLER_PLUGIN],
               [test "x${with_signal_handler_plugin}" = "xyes"])
    
AS_IF([test "x$with_signal_handler_plugin" = "xyes"],[

      AS_IF([test "x${with_static_signal_handler_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_signal_handler_plugin" = "xyes"],[
          pandora_builtin_load_list="signal_handler,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_signal_handler_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="signal_handler,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_signal_handler_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libsignal_handler_plugin.la"
     ],[
        AS_IF([test "x$enable_signal_handler_plugin" = "xyes"],[
          pandora_default_plugin_list="signal_handler,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([simple-user-policy-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-simple-user-policy-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-simple-user-policy-plugin],[Disable building ])
  ],[
    with_simple_user_policy_plugin="$withval"
    AS_IF([test "x$with_simple_user_policy_plugin" = "xyes"],[
      requested_simple_user_policy_plugin="yes"
    ],[
      requested_simple_user_policy_plugin="no"
    ])
  ],[
    with_simple_user_policy_plugin="yes"
    requested_simple_user_policy_plugin="no"
  ])
AC_ARG_WITH([static-simple-user-policy-plugin],[
AS_HELP_STRING([--with-static-simple-user-policy-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-simple-user-policy-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_simple_user_policy_plugin=${withval}
  ],[
    with_static_simple_user_policy_plugin=no
])
AS_IF([test "x${with_static_simple_user_policy_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_simple_user_policy_plugin=no
  ],[
  shared_simple_user_policy_plugin=yes
])
AC_ARG_ENABLE([simple-user-policy-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-simple-user-policy-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-simple-user-policy-plugin],[Disable loading  by default.])
  ],
  [enable_simple_user_policy_plugin="$enableval"],
  [enable_simple_user_policy_plugin=no])


AM_CONDITIONAL([BUILD_SIMPLE_USER_POLICY_PLUGIN_STATIC],
               [test "x${with_simple_user_policy_plugin}" = "xyes" -a ! "x${shared_simple_user_policy_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SIMPLE_USER_POLICY_PLUGIN_SHARED],
               [test "x${with_simple_user_policy_plugin}" = "xyes" -a "x${shared_simple_user_policy_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SIMPLE_USER_POLICY_PLUGIN],
               [test "x${with_simple_user_policy_plugin}" = "xyes"])
    
AS_IF([test "x$with_simple_user_policy_plugin" = "xyes"],[

      pandora_plugin_test_list="simple_user_policy,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_simple_user_policy_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_simple_user_policy_plugin" = "xyes"],[
          pandora_builtin_load_list="simple_user_policy,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_simple_user_policy_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="simple_user_policy,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_simple_user_policy_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libsimple_user_policy_plugin.la"
     ],[
        AS_IF([test "x$enable_simple_user_policy_plugin" = "xyes"],[
          pandora_default_plugin_list="simple_user_policy,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([slave-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-slave-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-slave-plugin],[Disable building ])
  ],[
    with_slave_plugin="$withval"
    AS_IF([test "x$with_slave_plugin" = "xyes"],[
      requested_slave_plugin="yes"
    ],[
      requested_slave_plugin="no"
    ])
  ],[
    with_slave_plugin="yes"
    requested_slave_plugin="no"
  ])
AC_ARG_WITH([static-slave-plugin],[
AS_HELP_STRING([--with-static-slave-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-slave-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_slave_plugin=${withval}
  ],[
    with_static_slave_plugin=no
])
AS_IF([test "x${with_static_slave_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_slave_plugin=no
  ],[
  shared_slave_plugin=yes
])
AC_ARG_ENABLE([slave-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-slave-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-slave-plugin],[Disable loading  by default.])
  ],
  [enable_slave_plugin="$enableval"],
  [enable_slave_plugin=no])


AM_CONDITIONAL([BUILD_SLAVE_PLUGIN_STATIC],
               [test "x${with_slave_plugin}" = "xyes" -a ! "x${shared_slave_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SLAVE_PLUGIN_SHARED],
               [test "x${with_slave_plugin}" = "xyes" -a "x${shared_slave_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SLAVE_PLUGIN],
               [test "x${with_slave_plugin}" = "xyes"])
    
AS_IF([test "x$with_slave_plugin" = "xyes"],[

      pandora_plugin_test_list="slave,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_slave_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_slave_plugin" = "xyes"],[
          pandora_builtin_load_list="slave,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_slave_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} \${top_builddir}/${top_builddir}/libdrizzle-2.0/libdrizzle-2.0.la"
        ])
        pandora_builtin_list="slave,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_slave_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libslave_plugin.la"
     ],[
        AS_IF([test "x$enable_slave_plugin" = "xyes"],[
          pandora_default_plugin_list="slave,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([sleep-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-sleep-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-sleep-plugin],[Disable building ])
  ],[
    with_sleep_plugin="$withval"
    AS_IF([test "x$with_sleep_plugin" = "xyes"],[
      requested_sleep_plugin="yes"
    ],[
      requested_sleep_plugin="no"
    ])
  ],[
    with_sleep_plugin="yes"
    requested_sleep_plugin="no"
  ])
AC_ARG_WITH([static-sleep-plugin],[
AS_HELP_STRING([--with-static-sleep-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-sleep-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_sleep_plugin=${withval}
  ],[
    with_static_sleep_plugin=yes
])
AS_IF([test "x${with_static_sleep_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_sleep_plugin=no
  ],[
  shared_sleep_plugin=yes
])
AC_ARG_ENABLE([sleep-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-sleep-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-sleep-plugin],[Disable loading  by default.])
  ],
  [enable_sleep_plugin="$enableval"],
  [enable_sleep_plugin=yes])


AM_CONDITIONAL([BUILD_SLEEP_PLUGIN_STATIC],
               [test "x${with_sleep_plugin}" = "xyes" -a ! "x${shared_sleep_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SLEEP_PLUGIN_SHARED],
               [test "x${with_sleep_plugin}" = "xyes" -a "x${shared_sleep_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SLEEP_PLUGIN],
               [test "x${with_sleep_plugin}" = "xyes"])
    
AS_IF([test "x$with_sleep_plugin" = "xyes"],[

      pandora_plugin_test_list="sleep,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_sleep_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_sleep_plugin" = "xyes"],[
          pandora_builtin_load_list="sleep,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_sleep_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="sleep,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_sleep_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libsleep_plugin.la"
     ],[
        AS_IF([test "x$enable_sleep_plugin" = "xyes"],[
          pandora_default_plugin_list="sleep,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([status-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-status-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-status-dictionary-plugin],[Disable building ])
  ],[
    with_status_dictionary_plugin="$withval"
    AS_IF([test "x$with_status_dictionary_plugin" = "xyes"],[
      requested_status_dictionary_plugin="yes"
    ],[
      requested_status_dictionary_plugin="no"
    ])
  ],[
    with_status_dictionary_plugin="yes"
    requested_status_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-status-dictionary-plugin],[
AS_HELP_STRING([--with-static-status-dictionary-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-status-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_status_dictionary_plugin=${withval}
  ],[
    with_static_status_dictionary_plugin=yes
])
AS_IF([test "x${with_static_status_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_status_dictionary_plugin=no
  ],[
  shared_status_dictionary_plugin=yes
])
AC_ARG_ENABLE([status-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-status-dictionary-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-status-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_status_dictionary_plugin="$enableval"],
  [enable_status_dictionary_plugin=yes])


AM_CONDITIONAL([BUILD_STATUS_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_status_dictionary_plugin}" = "xyes" -a ! "x${shared_status_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_STATUS_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_status_dictionary_plugin}" = "xyes" -a "x${shared_status_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_STATUS_DICTIONARY_PLUGIN],
               [test "x${with_status_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_status_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="status_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_status_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_status_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="status_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_status_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="status_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_status_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libstatus_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_status_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="status_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([storage-engine-api-tester-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-storage-engine-api-tester-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-storage-engine-api-tester-plugin],[Disable building ])
  ],[
    with_storage_engine_api_tester_plugin="$withval"
    AS_IF([test "x$with_storage_engine_api_tester_plugin" = "xyes"],[
      requested_storage_engine_api_tester_plugin="yes"
    ],[
      requested_storage_engine_api_tester_plugin="no"
    ])
  ],[
    with_storage_engine_api_tester_plugin="yes"
    requested_storage_engine_api_tester_plugin="no"
  ])
AC_ARG_WITH([static-storage-engine-api-tester-plugin],[
AS_HELP_STRING([--with-static-storage-engine-api-tester-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-storage-engine-api-tester-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_storage_engine_api_tester_plugin=${withval}
  ],[
    with_static_storage_engine_api_tester_plugin=no
])
AS_IF([test "x${with_static_storage_engine_api_tester_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_storage_engine_api_tester_plugin=no
  ],[
  shared_storage_engine_api_tester_plugin=yes
])
AC_ARG_ENABLE([storage-engine-api-tester-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-storage-engine-api-tester-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-storage-engine-api-tester-plugin],[Disable loading  by default.])
  ],
  [enable_storage_engine_api_tester_plugin="$enableval"],
  [enable_storage_engine_api_tester_plugin=no])


AM_CONDITIONAL([BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN_STATIC],
               [test "x${with_storage_engine_api_tester_plugin}" = "xyes" -a ! "x${shared_storage_engine_api_tester_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN_SHARED],
               [test "x${with_storage_engine_api_tester_plugin}" = "xyes" -a "x${shared_storage_engine_api_tester_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN],
               [test "x${with_storage_engine_api_tester_plugin}" = "xyes"])
    
AS_IF([test "x$with_storage_engine_api_tester_plugin" = "xyes"],[

      pandora_plugin_test_list="storage_engine_api_tester,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_storage_engine_api_tester_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_storage_engine_api_tester_plugin" = "xyes"],[
          pandora_builtin_load_list="storage_engine_api_tester,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_storage_engine_api_tester_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="storage_engine_api_tester,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_storage_engine_api_tester_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libstorage_engine_api_tester_plugin.la"
     ],[
        AS_IF([test "x$enable_storage_engine_api_tester_plugin" = "xyes"],[
          pandora_default_plugin_list="storage_engine_api_tester,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([string-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-string-functions-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-string-functions-plugin],[Disable building ])
  ],[
    with_string_functions_plugin="$withval"
    AS_IF([test "x$with_string_functions_plugin" = "xyes"],[
      requested_string_functions_plugin="yes"
    ],[
      requested_string_functions_plugin="no"
    ])
  ],[
    with_string_functions_plugin="yes"
    requested_string_functions_plugin="no"
  ])
AC_ARG_WITH([static-string-functions-plugin],[
AS_HELP_STRING([--with-static-string-functions-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-string-functions-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_string_functions_plugin=${withval}
  ],[
    with_static_string_functions_plugin=yes
])
AS_IF([test "x${with_static_string_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_string_functions_plugin=no
  ],[
  shared_string_functions_plugin=yes
])
AC_ARG_ENABLE([string-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-string-functions-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-string-functions-plugin],[Disable loading  by default.])
  ],
  [enable_string_functions_plugin="$enableval"],
  [enable_string_functions_plugin=yes])


AM_CONDITIONAL([BUILD_STRING_FUNCTIONS_PLUGIN_STATIC],
               [test "x${with_string_functions_plugin}" = "xyes" -a ! "x${shared_string_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_STRING_FUNCTIONS_PLUGIN_SHARED],
               [test "x${with_string_functions_plugin}" = "xyes" -a "x${shared_string_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_STRING_FUNCTIONS_PLUGIN],
               [test "x${with_string_functions_plugin}" = "xyes"])
    
AS_IF([test "x$with_string_functions_plugin" = "xyes"],[

      pandora_plugin_test_list="string_functions,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_string_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_string_functions_plugin" = "xyes"],[
          pandora_builtin_load_list="string_functions,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_string_functions_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="string_functions,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_string_functions_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libstring_functions_plugin.la"
     ],[
        AS_IF([test "x$enable_string_functions_plugin" = "xyes"],[
          pandora_default_plugin_list="string_functions,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([substr-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-substr-functions-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-substr-functions-plugin],[Disable building ])
  ],[
    with_substr_functions_plugin="$withval"
    AS_IF([test "x$with_substr_functions_plugin" = "xyes"],[
      requested_substr_functions_plugin="yes"
    ],[
      requested_substr_functions_plugin="no"
    ])
  ],[
    with_substr_functions_plugin="yes"
    requested_substr_functions_plugin="no"
  ])
AC_ARG_WITH([static-substr-functions-plugin],[
AS_HELP_STRING([--with-static-substr-functions-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-substr-functions-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_substr_functions_plugin=${withval}
  ],[
    with_static_substr_functions_plugin=no
])
AS_IF([test "x${with_static_substr_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_substr_functions_plugin=no
  ],[
  shared_substr_functions_plugin=yes
])
AC_ARG_ENABLE([substr-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-substr-functions-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-substr-functions-plugin],[Disable loading  by default.])
  ],
  [enable_substr_functions_plugin="$enableval"],
  [enable_substr_functions_plugin=yes])


AM_CONDITIONAL([BUILD_SUBSTR_FUNCTIONS_PLUGIN_STATIC],
               [test "x${with_substr_functions_plugin}" = "xyes" -a ! "x${shared_substr_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SUBSTR_FUNCTIONS_PLUGIN_SHARED],
               [test "x${with_substr_functions_plugin}" = "xyes" -a "x${shared_substr_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SUBSTR_FUNCTIONS_PLUGIN],
               [test "x${with_substr_functions_plugin}" = "xyes"])
    
AS_IF([test "x$with_substr_functions_plugin" = "xyes"],[

      AS_IF([test "x${with_static_substr_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_substr_functions_plugin" = "xyes"],[
          pandora_builtin_load_list="substr_functions,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_substr_functions_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="substr_functions,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_substr_functions_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libsubstr_functions_plugin.la"
     ],[
        AS_IF([test "x$enable_substr_functions_plugin" = "xyes"],[
          pandora_default_plugin_list="substr_functions,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([syslog-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-syslog-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-syslog-plugin],[Disable building ])
  ],[
    with_syslog_plugin="$withval"
    AS_IF([test "x$with_syslog_plugin" = "xyes"],[
      requested_syslog_plugin="yes"
    ],[
      requested_syslog_plugin="no"
    ])
  ],[
    with_syslog_plugin="yes"
    requested_syslog_plugin="no"
  ])
AC_ARG_WITH([static-syslog-plugin],[
AS_HELP_STRING([--with-static-syslog-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-syslog-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_syslog_plugin=${withval}
  ],[
    with_static_syslog_plugin=yes
])
AS_IF([test "x${with_static_syslog_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_syslog_plugin=no
  ],[
  shared_syslog_plugin=yes
])
AC_ARG_ENABLE([syslog-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-syslog-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-syslog-plugin],[Disable loading  by default.])
  ],
  [enable_syslog_plugin="$enableval"],
  [enable_syslog_plugin=yes])


AM_CONDITIONAL([BUILD_SYSLOG_PLUGIN_STATIC],
               [test "x${with_syslog_plugin}" = "xyes" -a ! "x${shared_syslog_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SYSLOG_PLUGIN_SHARED],
               [test "x${with_syslog_plugin}" = "xyes" -a "x${shared_syslog_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_SYSLOG_PLUGIN],
               [test "x${with_syslog_plugin}" = "xyes"])
    
AS_IF([test "x$with_syslog_plugin" = "xyes"],[

      AS_IF([test "x${with_static_syslog_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_syslog_plugin" = "xyes"],[
          pandora_builtin_load_list="syslog,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_syslog_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="syslog,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_syslog_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libsyslog_plugin.la"
     ],[
        AS_IF([test "x$enable_syslog_plugin" = "xyes"],[
          pandora_default_plugin_list="syslog,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([table-cache-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-table-cache-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-table-cache-dictionary-plugin],[Disable building ])
  ],[
    with_table_cache_dictionary_plugin="$withval"
    AS_IF([test "x$with_table_cache_dictionary_plugin" = "xyes"],[
      requested_table_cache_dictionary_plugin="yes"
    ],[
      requested_table_cache_dictionary_plugin="no"
    ])
  ],[
    with_table_cache_dictionary_plugin="yes"
    requested_table_cache_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-table-cache-dictionary-plugin],[
AS_HELP_STRING([--with-static-table-cache-dictionary-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-table-cache-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_table_cache_dictionary_plugin=${withval}
  ],[
    with_static_table_cache_dictionary_plugin=yes
])
AS_IF([test "x${with_static_table_cache_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_table_cache_dictionary_plugin=no
  ],[
  shared_table_cache_dictionary_plugin=yes
])
AC_ARG_ENABLE([table-cache-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-table-cache-dictionary-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-table-cache-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_table_cache_dictionary_plugin="$enableval"],
  [enable_table_cache_dictionary_plugin=yes])


AM_CONDITIONAL([BUILD_TABLE_CACHE_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_table_cache_dictionary_plugin}" = "xyes" -a ! "x${shared_table_cache_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_TABLE_CACHE_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_table_cache_dictionary_plugin}" = "xyes" -a "x${shared_table_cache_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_TABLE_CACHE_DICTIONARY_PLUGIN],
               [test "x${with_table_cache_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_table_cache_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="table_cache_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_table_cache_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_table_cache_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="table_cache_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_table_cache_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="table_cache_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_table_cache_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libtable_cache_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_table_cache_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="table_cache_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([tableprototester-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-tableprototester-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-tableprototester-plugin],[Disable building ])
  ],[
    with_tableprototester_plugin="$withval"
    AS_IF([test "x$with_tableprototester_plugin" = "xyes"],[
      requested_tableprototester_plugin="yes"
    ],[
      requested_tableprototester_plugin="no"
    ])
  ],[
    with_tableprototester_plugin="yes"
    requested_tableprototester_plugin="no"
  ])
AC_ARG_WITH([static-tableprototester-plugin],[
AS_HELP_STRING([--with-static-tableprototester-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-tableprototester-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_tableprototester_plugin=${withval}
  ],[
    with_static_tableprototester_plugin=no
])
AS_IF([test "x${with_static_tableprototester_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_tableprototester_plugin=no
  ],[
  shared_tableprototester_plugin=yes
])
AC_ARG_ENABLE([tableprototester-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-tableprototester-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-tableprototester-plugin],[Disable loading  by default.])
  ],
  [enable_tableprototester_plugin="$enableval"],
  [enable_tableprototester_plugin=no])


AM_CONDITIONAL([BUILD_TABLEPROTOTESTER_PLUGIN_STATIC],
               [test "x${with_tableprototester_plugin}" = "xyes" -a ! "x${shared_tableprototester_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_TABLEPROTOTESTER_PLUGIN_SHARED],
               [test "x${with_tableprototester_plugin}" = "xyes" -a "x${shared_tableprototester_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_TABLEPROTOTESTER_PLUGIN],
               [test "x${with_tableprototester_plugin}" = "xyes"])
    
AS_IF([test "x$with_tableprototester_plugin" = "xyes"],[

      pandora_plugin_test_list="tableprototester,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_tableprototester_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_tableprototester_plugin" = "xyes"],[
          pandora_builtin_load_list="tableprototester,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_tableprototester_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="tableprototester,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_tableprototester_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libtableprototester_plugin.la"
     ],[
        AS_IF([test "x$enable_tableprototester_plugin" = "xyes"],[
          pandora_default_plugin_list="tableprototester,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([trigger-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-trigger-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-trigger-dictionary-plugin],[Disable building ])
  ],[
    with_trigger_dictionary_plugin="$withval"
    AS_IF([test "x$with_trigger_dictionary_plugin" = "xyes"],[
      requested_trigger_dictionary_plugin="yes"
    ],[
      requested_trigger_dictionary_plugin="no"
    ])
  ],[
    with_trigger_dictionary_plugin="yes"
    requested_trigger_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-trigger-dictionary-plugin],[
AS_HELP_STRING([--with-static-trigger-dictionary-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-trigger-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_trigger_dictionary_plugin=${withval}
  ],[
    with_static_trigger_dictionary_plugin=no
])
AS_IF([test "x${with_static_trigger_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_trigger_dictionary_plugin=no
  ],[
  shared_trigger_dictionary_plugin=yes
])
AC_ARG_ENABLE([trigger-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-trigger-dictionary-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-trigger-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_trigger_dictionary_plugin="$enableval"],
  [enable_trigger_dictionary_plugin=no])


AM_CONDITIONAL([BUILD_TRIGGER_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_trigger_dictionary_plugin}" = "xyes" -a ! "x${shared_trigger_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_TRIGGER_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_trigger_dictionary_plugin}" = "xyes" -a "x${shared_trigger_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_TRIGGER_DICTIONARY_PLUGIN],
               [test "x${with_trigger_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_trigger_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="trigger_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_trigger_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_trigger_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="trigger_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_trigger_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="trigger_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_trigger_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libtrigger_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_trigger_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="trigger_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([user-locks-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-user-locks-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-user-locks-plugin],[Disable building ])
  ],[
    with_user_locks_plugin="$withval"
    AS_IF([test "x$with_user_locks_plugin" = "xyes"],[
      requested_user_locks_plugin="yes"
    ],[
      requested_user_locks_plugin="no"
    ])
  ],[
    with_user_locks_plugin="yes"
    requested_user_locks_plugin="no"
  ])
AC_ARG_WITH([static-user-locks-plugin],[
AS_HELP_STRING([--with-static-user-locks-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-user-locks-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_user_locks_plugin=${withval}
  ],[
    with_static_user_locks_plugin=yes
])
AS_IF([test "x${with_static_user_locks_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_user_locks_plugin=no
  ],[
  shared_user_locks_plugin=yes
])
AC_ARG_ENABLE([user-locks-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-user-locks-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-user-locks-plugin],[Disable loading  by default.])
  ],
  [enable_user_locks_plugin="$enableval"],
  [enable_user_locks_plugin=yes])


AM_CONDITIONAL([BUILD_USER_LOCKS_PLUGIN_STATIC],
               [test "x${with_user_locks_plugin}" = "xyes" -a ! "x${shared_user_locks_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_USER_LOCKS_PLUGIN_SHARED],
               [test "x${with_user_locks_plugin}" = "xyes" -a "x${shared_user_locks_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_USER_LOCKS_PLUGIN],
               [test "x${with_user_locks_plugin}" = "xyes"])
    
AS_IF([test "x$with_user_locks_plugin" = "xyes"],[

      pandora_plugin_test_list="user_locks,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_user_locks_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_user_locks_plugin" = "xyes"],[
          pandora_builtin_load_list="user_locks,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_user_locks_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="user_locks,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_user_locks_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libuser_locks_plugin.la"
     ],[
        AS_IF([test "x$enable_user_locks_plugin" = "xyes"],[
          pandora_default_plugin_list="user_locks,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([utility-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-utility-dictionary-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-utility-dictionary-plugin],[Disable building ])
  ],[
    with_utility_dictionary_plugin="$withval"
    AS_IF([test "x$with_utility_dictionary_plugin" = "xyes"],[
      requested_utility_dictionary_plugin="yes"
    ],[
      requested_utility_dictionary_plugin="no"
    ])
  ],[
    with_utility_dictionary_plugin="yes"
    requested_utility_dictionary_plugin="no"
  ])
AC_ARG_WITH([static-utility-dictionary-plugin],[
AS_HELP_STRING([--with-static-utility-dictionary-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-utility-dictionary-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_utility_dictionary_plugin=${withval}
  ],[
    with_static_utility_dictionary_plugin=no
])
AS_IF([test "x${with_static_utility_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_utility_dictionary_plugin=no
  ],[
  shared_utility_dictionary_plugin=yes
])
AC_ARG_ENABLE([utility-dictionary-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-utility-dictionary-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-utility-dictionary-plugin],[Disable loading  by default.])
  ],
  [enable_utility_dictionary_plugin="$enableval"],
  [enable_utility_dictionary_plugin=no])


AM_CONDITIONAL([BUILD_UTILITY_DICTIONARY_PLUGIN_STATIC],
               [test "x${with_utility_dictionary_plugin}" = "xyes" -a ! "x${shared_utility_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_UTILITY_DICTIONARY_PLUGIN_SHARED],
               [test "x${with_utility_dictionary_plugin}" = "xyes" -a "x${shared_utility_dictionary_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_UTILITY_DICTIONARY_PLUGIN],
               [test "x${with_utility_dictionary_plugin}" = "xyes"])
    
AS_IF([test "x$with_utility_dictionary_plugin" = "xyes"],[

      pandora_plugin_test_list="utility_dictionary,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_utility_dictionary_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_utility_dictionary_plugin" = "xyes"],[
          pandora_builtin_load_list="utility_dictionary,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_utility_dictionary_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="utility_dictionary,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_utility_dictionary_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libutility_dictionary_plugin.la"
     ],[
        AS_IF([test "x$enable_utility_dictionary_plugin" = "xyes"],[
          pandora_default_plugin_list="utility_dictionary,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([utility-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-utility-functions-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-utility-functions-plugin],[Disable building ])
  ],[
    with_utility_functions_plugin="$withval"
    AS_IF([test "x$with_utility_functions_plugin" = "xyes"],[
      requested_utility_functions_plugin="yes"
    ],[
      requested_utility_functions_plugin="no"
    ])
  ],[
    with_utility_functions_plugin="yes"
    requested_utility_functions_plugin="no"
  ])
AC_ARG_WITH([static-utility-functions-plugin],[
AS_HELP_STRING([--with-static-utility-functions-plugin],[Build Archive Storage Engine. @<:@default=yes@:>@])
AS_HELP_STRING([--without-static-utility-functions-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_utility_functions_plugin=${withval}
  ],[
    with_static_utility_functions_plugin=yes
])
AS_IF([test "x${with_static_utility_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_utility_functions_plugin=no
  ],[
  shared_utility_functions_plugin=yes
])
AC_ARG_ENABLE([utility-functions-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-utility-functions-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-utility-functions-plugin],[Disable loading  by default.])
  ],
  [enable_utility_functions_plugin="$enableval"],
  [enable_utility_functions_plugin=yes])


AM_CONDITIONAL([BUILD_UTILITY_FUNCTIONS_PLUGIN_STATIC],
               [test "x${with_utility_functions_plugin}" = "xyes" -a ! "x${shared_utility_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_UTILITY_FUNCTIONS_PLUGIN_SHARED],
               [test "x${with_utility_functions_plugin}" = "xyes" -a "x${shared_utility_functions_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_UTILITY_FUNCTIONS_PLUGIN],
               [test "x${with_utility_functions_plugin}" = "xyes"])
    
AS_IF([test "x$with_utility_functions_plugin" = "xyes"],[

      pandora_plugin_test_list="utility_functions,${pandora_plugin_test_list}"
    
      AS_IF([test "x${with_static_utility_functions_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_utility_functions_plugin" = "xyes"],[
          pandora_builtin_load_list="utility_functions,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_utility_functions_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="utility_functions,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_utility_functions_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libutility_functions_plugin.la"
     ],[
        AS_IF([test "x$enable_utility_functions_plugin" = "xyes"],[
          pandora_default_plugin_list="utility_functions,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([uuid-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-uuid-function-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-uuid-function-plugin],[Disable building ])
  ],[
    with_uuid_function_plugin="$withval"
    AS_IF([test "x$with_uuid_function_plugin" = "xyes"],[
      requested_uuid_function_plugin="yes"
    ],[
      requested_uuid_function_plugin="no"
    ])
  ],[
    with_uuid_function_plugin="yes"
    requested_uuid_function_plugin="no"
  ])
AC_ARG_WITH([static-uuid-function-plugin],[
AS_HELP_STRING([--with-static-uuid-function-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-uuid-function-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_uuid_function_plugin=${withval}
  ],[
    with_static_uuid_function_plugin=no
])
AS_IF([test "x${with_static_uuid_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_uuid_function_plugin=no
  ],[
  shared_uuid_function_plugin=yes
])
AC_ARG_ENABLE([uuid-function-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-uuid-function-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-uuid-function-plugin],[Disable loading  by default.])
  ],
  [enable_uuid_function_plugin="$enableval"],
  [enable_uuid_function_plugin=yes])

m4_sinclude([plugin/uuid_function/plugin.ac])

AS_IF([test "x${with_uuid_function_plugin}" = "xyes" -a "${ac_cv_header_uuid_uuid_h}" = "yes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_uuid_function_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin uuid_function was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_uuid_function_plugin=no
      ])


AM_CONDITIONAL([BUILD_UUID_FUNCTION_PLUGIN_STATIC],
               [test "x${with_uuid_function_plugin}" = "xyes" -a "${ac_cv_header_uuid_uuid_h}" = "yes" -a ! "x${shared_uuid_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_UUID_FUNCTION_PLUGIN_SHARED],
               [test "x${with_uuid_function_plugin}" = "xyes" -a "${ac_cv_header_uuid_uuid_h}" = "yes" -a "x${shared_uuid_function_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_UUID_FUNCTION_PLUGIN],
               [test "x${with_uuid_function_plugin}" = "xyes" -a "${ac_cv_header_uuid_uuid_h}" = "yes"])
    
AS_IF([test "x$with_uuid_function_plugin" = "xyes"],[

      AS_IF([test "x${with_static_uuid_function_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_uuid_function_plugin" = "xyes"],[
          pandora_builtin_load_list="uuid_function,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_uuid_function_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="uuid_function,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_uuid_function_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libuuid_function_plugin.la"
     ],[
        AS_IF([test "x$enable_uuid_function_plugin" = "xyes"],[
          pandora_default_plugin_list="uuid_function,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([version-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-version-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-version-plugin],[Disable building ])
  ],[
    with_version_plugin="$withval"
    AS_IF([test "x$with_version_plugin" = "xyes"],[
      requested_version_plugin="yes"
    ],[
      requested_version_plugin="no"
    ])
  ],[
    with_version_plugin="yes"
    requested_version_plugin="no"
  ])
AC_ARG_WITH([static-version-plugin],[
AS_HELP_STRING([--with-static-version-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-version-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_version_plugin=${withval}
  ],[
    with_static_version_plugin=no
])
AS_IF([test "x${with_static_version_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_version_plugin=no
  ],[
  shared_version_plugin=yes
])
AC_ARG_ENABLE([version-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-version-plugin],[Enable loading  by default. @<:@default=yes@:>@])
AS_HELP_STRING([--disable-version-plugin],[Disable loading  by default.])
  ],
  [enable_version_plugin="$enableval"],
  [enable_version_plugin=yes])


AM_CONDITIONAL([BUILD_VERSION_PLUGIN_STATIC],
               [test "x${with_version_plugin}" = "xyes" -a ! "x${shared_version_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_VERSION_PLUGIN_SHARED],
               [test "x${with_version_plugin}" = "xyes" -a "x${shared_version_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_VERSION_PLUGIN],
               [test "x${with_version_plugin}" = "xyes"])
    
AS_IF([test "x$with_version_plugin" = "xyes"],[

      AS_IF([test "x${with_static_version_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_version_plugin" = "xyes"],[
          pandora_builtin_load_list="version,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_version_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="version,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_version_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libversion_plugin.la"
     ],[
        AS_IF([test "x$enable_version_plugin" = "xyes"],[
          pandora_default_plugin_list="version,${pandora_default_plugin_list}"
        ])
    ])
    ])

dnl Config for 

AC_ARG_WITH([zeromq-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--with-zeromq-plugin],[Build . @<:@default=yes@:>@])
AS_HELP_STRING([--without-zeromq-plugin],[Disable building ])
  ],[
    with_zeromq_plugin="$withval"
    AS_IF([test "x$with_zeromq_plugin" = "xyes"],[
      requested_zeromq_plugin="yes"
    ],[
      requested_zeromq_plugin="no"
    ])
  ],[
    with_zeromq_plugin="yes"
    requested_zeromq_plugin="no"
  ])
AC_ARG_WITH([static-zeromq-plugin],[
AS_HELP_STRING([--with-static-zeromq-plugin],[Build Archive Storage Engine. @<:@default=no@:>@])
AS_HELP_STRING([--without-static-zeromq-plugin],[Disable building Archive Storage Engine])
  ],[
    with_static_zeromq_plugin=${withval}
  ],[
    with_static_zeromq_plugin=no
])
AS_IF([test "x${with_static_zeromq_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[
  shared_zeromq_plugin=no
  ],[
  shared_zeromq_plugin=yes
])
AC_ARG_ENABLE([zeromq-plugin],[
dnl indented wierd to make the help output correct
AS_HELP_STRING([--enable-zeromq-plugin],[Enable loading  by default. @<:@default=no@:>@])
AS_HELP_STRING([--disable-zeromq-plugin],[Disable loading  by default.])
  ],
  [enable_zeromq_plugin="$enableval"],
  [enable_zeromq_plugin=no])

m4_sinclude([plugin/zeromq/plugin.ac])

AS_IF([test "x${with_zeromq_plugin}" = "xyes" -a "$ac_cv_libzmq" = "yes"],
      [], dnl build_conditional can only negate
      [
        AS_IF([test "x${requested_zeromq_plugin}" = "xyes"],
              [AC_MSG_ERROR([Plugin zeromq was explicitly requested, yet failed build dependency checks. Aborting!])])
        with_zeromq_plugin=no
      ])


AM_CONDITIONAL([BUILD_ZEROMQ_PLUGIN_STATIC],
               [test "x${with_zeromq_plugin}" = "xyes" -a "$ac_cv_libzmq" = "yes" -a ! "x${shared_zeromq_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_ZEROMQ_PLUGIN_SHARED],
               [test "x${with_zeromq_plugin}" = "xyes" -a "$ac_cv_libzmq" = "yes" -a "x${shared_zeromq_plugin}" = "xyes"])
AM_CONDITIONAL([BUILD_ZEROMQ_PLUGIN],
               [test "x${with_zeromq_plugin}" = "xyes" -a "$ac_cv_libzmq" = "yes"])
    
AS_IF([test "x$with_zeromq_plugin" = "xyes"],[

      AS_IF([test "x${with_static_zeromq_plugin}" = "xyes" -o "x${with_all_static}" = "xyes"],[

        AS_IF([test "x$enable_zeromq_plugin" = "xyes"],[
          pandora_builtin_load_list="zeromq,${pandora_builtin_load_list}"
          pandora_builtin_load_symbols_list="_drizzled_zeromq_plugin_,${pandora_builtin_load_symbols_list}"
          PANDORA_PLUGIN_DEP_LIBS="${PANDORA_PLUGIN_DEP_LIBS} "
        ])
        pandora_builtin_list="zeromq,${pandora_builtin_list}"
        pandora_builtin_symbols_list="_drizzled_zeromq_plugin_,${pandora_builtin_symbols_list}"
        pandora_plugin_libs="${pandora_plugin_libs} \${top_builddir}/plugin/libzeromq_plugin.la"
     ],[
        AS_IF([test "x$enable_zeromq_plugin" = "xyes"],[
          pandora_default_plugin_list="zeromq,${pandora_default_plugin_list}"
        ])
    ])
    ])
